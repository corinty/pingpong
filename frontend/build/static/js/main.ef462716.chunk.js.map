{"version":3,"sources":["store/firebaseConfig.js","store/types.js","store/reducers/match.reducer.js","store/reducers/game.reducer.js","store/reducers/index.Reducer.js","store/store.js","hooks/useLiveGame.js","components/Game.jsx","hooks/useCheckForWinner.js","store/actions/actions.js","components/Winner.jsx","pages/CurrentMatch.jsx","pages/NewMatch.jsx","pages/ScoreBoard.jsx","hooks/useLiveIds.js","App.jsx","serviceWorker.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","db","firestore","INITIALIZE_GAME","INITIALIZE_MATCH","UPDATE_MATCH","UPDATE_GAME","EXIT_GAME","APP_ERROR","INCREMENT","DECREMENT","matchInitial","totalGamesPlayed","winner","initalGame","initialAppState","error","errorMessage","matchInit","rootReducer","combineReducers","match","state","arguments","length","undefined","action","type","payload","__typename","Object","objectSpread","game","_objectSpread2","_objectSpread3","switchServe","serveNum","defineProperty","team","whoServes","app","_ref","matchId","gameId","initialState","middleware","thunk","withExtraArgument","getFirebase","getFirestore","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","useLiveGameDispatch","shouldDispatch","dispatch","useDispatch","_useState","useState","team1_score","team2_score","_useState2","slicedToArray","data","setData","_useState3","_useState4","loading","setLoading","useEffect","unsubscribe","doc","concat","onSnapshot","ref","Container","styled","div","Game_templateObject","Game","_useContext","useContext","__RouterContext","history","_useContext$match$par","params","matchState","useSelector","team1","team2","updatingScore","setUpdatingScore","team1_name","team2_name","_useLiveGame","pointsToWin","useLiveGame","_useLiveGame$data","_useMutation","setWinner","_useQuery","useQuery","gql","_templateObject","fetchPolicy","loadingQuery","score","_data$activeMatch$mat","activeMatch","entries","find","_ref2","_ref3","Math","abs","results","sort","a","b","winnerObj","finalScore","winningTeam","console","log","useMutation","_templateObject2","_useMutation2","declareWinner","_useMutation2$","variables","then","res","useCheckForWinner","Game_templateObject2","updateScore","mutationRunning","addArcadeListeners","e","key","increment","document","addEventListener","removeEventListener","react_default","createElement","className","disabled","onClick","push","initializeMatchAction","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_x","apply","this","initializeGameAction","_ref4","_callee2","_context2","_x2","Winner","Winner_templateObject","nextGame","mutationLoading","setTimeout","CurrentMatch","NewMatch","keyboardShowing","showKeyboard","inputTarget","setInputTarget","_useState5","_useState6","layoutName","setLayoutName","_useState7","gamesToWin","_useState8","setState","NewMatch_templateObject","createMatch","handleChange","target","name","parseInt","value","handleFocus","style","display","autoComplete","onSubmit","preventDefault","catch","err","htmlFor","onFocus","id","onChange","onBlur","build_default","input","inputName","layout","default","shift","numpad","buttonTheme","class","buttons","onKeyPress","btn","mergeDisplay","{bksp}","{close}","{shift}","{ok}","ScoreBoard","_useLiveIds","unsub","useLiveIds","firebaseLoading","firebaseInstance","store","createStore","applyMiddleware","reduxFirestore","client","ApolloClient","App","react_common_esm","react_redux_es","react_router_dom","react_router","path","exact","component","React","Component","Boolean","location","hostname","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ef462716.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nconst config = {\n  apiKey: \"AIzaSyCcrzECR6WLk_YtsCk6rUMbNxfFh0cn__8\",\n  authDomain: \"tydev-ping-pong.firebaseapp.com\",\n  databaseURL: \"https://tydev-ping-pong.firebaseio.com\",\n  projectId: \"tydev-ping-pong\",\n  storageBucket: \"tydev-ping-pong.appspot.com\",\n  messagingSenderId: \"29869586839\",\n  appId: \"1:29869586839:web:080ae459d72aa8f6\"\n};\n\nfirebase.initializeApp(config);\n\nexport const db = firebase.firestore();\n\nexport default config;\n","export const INITIALIZE_GAME = \"INITIALIZE_GAME\";\nexport const INITIALIZE_MATCH = \"INITIALIZE_MATCH\";\n\nexport const CREATE_GAME = \"CREATE_GAME\";\nexport const UPDATE_MATCH = \"UPDATE_MATCH\";\nexport const UPDATE_GAME = \"UPDATE_GAME\";\nexport const UPDATE_TEAM_NAMES = \"UPDATE_TEAM_NAMES\";\nexport const CLEAR_GAME = \"CLEAR_GAME\";\nexport const EXIT_GAME = \"EXIT_GAME\";\nexport const APP_ERROR = \"APP_ERROR\";\n\nexport const DECLARE_WINNER = \"DECLARE_WINNER\";\nexport const INCREMENT = \"INCREMENT\";\nexport const DECREMENT = \"DECREMENT\";\nexport const SWAP_SERVE = \"SWAP_SERVE\";\n","import { UPDATE_MATCH, EXIT_GAME, INITIALIZE_MATCH } from \"../types\";\n\nexport const matchInitial = {\n  totalGamesPlayed: 0,\n  winner: null\n};\nexport default function gameReducer(state = matchInitial, action) {\n  switch (action.type) {\n    case INITIALIZE_MATCH:\n      delete action.payload.match.__typename;\n      return action.payload.match;\n\n    case UPDATE_MATCH:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case EXIT_GAME:\n      return {};\n\n    default:\n      return state;\n  }\n}\n","import {\n  CLEAR_GAME,\n  INCREMENT,\n  DECREMENT,\n  INITIALIZE_GAME,\n  INITIALIZE_MATCH,\n  UPDATE_GAME,\n  EXIT_GAME\n} from \"../types\";\n\nexport const initalGame = {};\n\nexport default function gameReducer(state = initalGame, action) {\n  switch (action.type) {\n    case INITIALIZE_MATCH:\n      delete action.payload.game.__typename;\n      return { ...action.payload.game };\n    case INITIALIZE_GAME:\n      return { ...action.payload.game };\n    case UPDATE_GAME:\n      return action.payload || state;\n    case EXIT_GAME:\n      return {};\n    case INCREMENT:\n      let switchServe = state.serveNum === 5;\n      return {\n        ...state,\n        [action.team]: state[action.team] + 1,\n        // serveNum: state.serveNum === 5 ? 1 : state.serveNum + 1,\n        whoServes: switchServe\n          ? state.whoServes === \"team1\"\n            ? \"team2\"\n            : \"team1\"\n          : state.whoServes\n      };\n    case DECREMENT:\n      if (state[action.team] === 0) return state;\n      return {\n        ...state,\n        [action.team]: state[action.team] - 1,\n        serveNum: state.serveNum === 1 ? 5 : state.serveNum - 1,\n        whoServes:\n          state.serveNum !== 1\n            ? state.whoServes\n            : state.whoServes === \"team1\"\n            ? \"team2\"\n            : \"team1\"\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { APP_ERROR, INITIALIZE_MATCH, EXIT_GAME } from \"../types\";\nimport matchReducer from \"./match.reducer\";\nimport gameReducer from \"./game.reducer\";\n\nexport const initialAppState = {\n  error: false,\n  errorMessage: \"\",\n  matchInit: false\n};\n\nfunction app(state = initialAppState, { type, error, payload }) {\n  switch (type) {\n    case INITIALIZE_MATCH:\n      return {\n        ...state,\n        matchId: payload.matchId,\n        gameId: payload.gameId,\n        matchInit: true\n      };\n    case APP_ERROR:\n      return { ...state, error: true, errorMessage: error };\n    case EXIT_GAME:\n      return { ...initialAppState, matchInit: false };\n    default:\n      return state;\n  }\n}\n\nexport const rootReducer = combineReducers({\n  match: matchReducer,\n  game: gameReducer,\n  app\n});\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { getFirestore, reduxFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./firebaseConfig\";\nimport rootReducer from \"./reducers/index.Reducer\";\n\n// Create store with reducers and initial state\nconst initialState = {};\n\nconst middleware = [thunk.withExtraArgument({ getFirebase, getFirestore })];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport default firebaseInstance => {\n  return createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(\n      applyMiddleware(...middleware),\n      reduxFirestore(firebaseInstance)\n    )\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { UPDATE_GAME } from \"../store/types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { gql } from \"apollo-boost\";\nimport { db } from \"../store/firebaseConfig\";\n\nexport default function useLiveGameDispatch(\n  matchId,\n  gameId,\n  { dispatch: shouldDispatch } = { dispatch: true }\n) {\n  const dispatch = useDispatch();\n  const [data, setData] = useState({ team1_score: 0, team2_score: 0 });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (!matchId || !gameId) return;\n    const unsubscribe = db\n      .doc(`matches/${matchId}/games/${gameId}`)\n      .onSnapshot(ref => {\n        setData(ref.data());\n        if (shouldDispatch) {\n          dispatch({ type: UPDATE_GAME, payload: ref.data() });\n        }\n\n        if (loading) setLoading(false);\n      });\n    return () => {\n      unsubscribe();\n    };\n  }, [dispatch, gameId, loading, matchId, shouldDispatch]);\n\n  return { data, loading };\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { __RouterContext } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { SWAP_SERVE, CLEAR_GAME, EXIT_GAME } from \"../store/types\";\nimport useLiveGame from \"../hooks/useLiveGame\";\nimport useCheckForWinner from \"../hooks/useCheckForWinner\";\n\nconst Container = styled.div`\n  display: grid;\n  height: 100%;\n  position: relative;\n  grid-template-columns: 1fr 50px 1fr;\n`;\n\nexport default function Game() {\n  /**\n   * Component data\n   */\n  const {\n    history,\n    match: {\n      params: { matchId, gameId }\n    }\n  } = useContext(__RouterContext);\n\n  const dispatch = useDispatch();\n  const matchState = useSelector(state => ({\n    ...state.match,\n    ...state.app,\n    game: state.game\n  }));\n  const [updatingScore, setUpdatingScore] = useState({\n    team1: false,\n    team2: false\n  });\n\n  const { team1_name, team2_name, serveNum, pointsToWin } = matchState;\n\n  const {\n    data: { team1_score, team2_score },\n    loading\n  } = useLiveGame(matchId, gameId);\n  const winner = useCheckForWinner({ team1_score, team2_score });\n\n  const [updateScore, { loading: mutationRunning }] = useMutation(\n    gql`\n      mutation UpdateScore(\n        $matchId: String!\n        $gameId: String!\n        $team: TeamEnum!\n        $score: Int!\n        $increment: Boolean!\n      ) {\n        updateScore(\n          matchId: $matchId\n          gameId: $gameId\n          team: $team\n          increment: $increment\n          score: $score\n        ) {\n          team1_score\n          team2_score\n        }\n      }\n    `,\n    { variables: { matchId, gameId } }\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", addArcadeListeners);\n    function addArcadeListeners(e) {\n      switch (e.key) {\n        case \"q\":\n          updateScore({\n            variables: {\n              team: \"team1\",\n              score: team1_score,\n              increment: true\n            }\n          });\n          break;\n        case \"a\":\n          updateScore({\n            variables: {\n              team: \"team1\",\n              score: team1_score,\n              increment: false\n            }\n          });\n          break;\n        case \"w\":\n          updateScore({\n            variables: {\n              team: \"team2\",\n              score: team2_score,\n              increment: true\n            }\n          });\n          break;\n        case \"s\":\n          updateScore({\n            variables: {\n              team: \"team2\",\n              score: team2_score,\n              increment: false\n            }\n          });\n          break;\n        default:\n      }\n    }\n    return () => {\n      document.removeEventListener(\"keydown\", addArcadeListeners);\n    };\n  }, [dispatch, team1_score, team2_score, updateScore]);\n\n  // return <p>back to data testing</p>;\n\n  return loading ? null : (\n    <Container className=\"pi-focused\">\n      <button\n        disabled={mutationRunning && updatingScore.team1}\n        className=\"btn--increment\"\n        onClick={e => {\n          setUpdatingScore({ ...updatingScore, team1: true });\n          updateScore({\n            variables: {\n              team: \"team1\",\n              score: team1_score,\n              increment: true\n            }\n          }).then(res => {\n            setUpdatingScore({ ...updatingScore, team1: false });\n          });\n        }}>\n        <p className=\"team-name\">\n          {team1_name && team1_name.length > 0 ? team1_name : \"Team 1\"}\n        </p>\n        <p className=\"score\">{team1_score}</p>\n      </button>\n\n      <div\n        className=\"center-btns\"\n        onClick={() => {\n          dispatch({ type: EXIT_GAME });\n          history.push(\"/match\");\n        }}\n      />\n\n      <button\n        className=\"btn--increment\"\n        disabled={mutationRunning && updatingScore.team2}\n        onClick={() => {\n          setUpdatingScore({ ...updatingScore, team2: true });\n          updateScore({\n            variables: {\n              team: \"team2\",\n              score: team2_score,\n              increment: true\n            }\n          }).then(res => {\n            setUpdatingScore({ ...updatingScore, team2: false });\n          });\n        }}>\n        <p className=\"team-name\">\n          {team2_name && team2_name.length > 0 ? team2_name : \"Team 2\"}\n        </p>\n        <p className=\"score\">{team2_score}</p>\n      </button>\n    </Container>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { UPDATE_MATCH } from \"../store/types\";\n\nexport default function useCheckForWinner({ team1_score, team2_score }) {\n  const dispatch = useDispatch();\n  const [winner, setWinner] = useState(null);\n  const { data, loading: loadingQuery } = useQuery(\n    gql`\n      query getActiveMatch {\n        activeMatch {\n          matchId\n          gameId\n          match {\n            winner\n            pointsToWin\n          }\n        }\n      }\n    `,\n    { fetchPolicy: \"network-only\" }\n  );\n\n  /**\n   * Logic to check if there should be a game winner\n   */\n  useEffect(() => {\n    const score = {\n      team1: team1_score,\n      team2: team2_score\n    };\n\n    if (loadingQuery) return;\n    const {\n      match: { pointsToWin, winner }\n    } = data.activeMatch;\n\n    const checkForWinner = Object.entries(score).find(\n      ([team, score]) => score >= pointsToWin\n    );\n\n    if (checkForWinner && Math.abs(team1_score - team2_score) > 1) {\n      const results = Object.entries(score).sort((a, b) => {\n        return a[1] < b[1] ? 1 : -1;\n      })[0];\n      const winnerObj = {\n        finalScore: { team1_score, team2_score },\n        winningTeam: results[0]\n      };\n      console.log(winnerObj);\n\n      setWinner(winnerObj);\n    }\n  }, [data.activeMatch, loadingQuery, team1_score, team2_score]);\n\n  /**\n   * Declare winner mutation\n   */ const [declareWinner, { data: mutationData, error }] = useMutation(gql`\n    mutation DeclareWinner(\n      $matchId: String!\n      $gameId: String!\n      $winner: TeamEnum!\n    ) {\n      declareWinner(matchId: $matchId, gameId: $gameId, winner: $winner) {\n        winner\n        gamesWon {\n          team1\n          team2\n        }\n      }\n    }\n  `);\n  useEffect(() => {\n    if (!winner || loadingQuery) return;\n    declareWinner({\n      variables: {\n        matchId: data.activeMatch.matchId,\n        gameId: data.activeMatch.gameId,\n        winner: winner.winningTeam\n      }\n    }).then(res => {\n      dispatch({ type: UPDATE_MATCH, payload: res.data.declareWinner });\n    });\n  }, [data, declareWinner, dispatch, loadingQuery, winner]);\n\n  return winner;\n}\n","import { INITIALIZE_MATCH, INITIALIZE_GAME } from \"../types\";\n\nexport const initializeMatchAction = ({ data, history }) => {\n  return async dispatch => {\n    dispatch({ type: INITIALIZE_MATCH, payload: data });\n\n    history.push(`/match/${data.matchId}/game/${data.gameId}`, { ...data });\n  };\n};\nexport const initializeGameAction = ({ data, history }) => {\n  return async dispatch => {\n    dispatch({ type: INITIALIZE_GAME, payload: data.game });\n\n    history.push(`/match/${data.matchId}/game/${data.gameId}`, { ...data });\n  };\n};\n","import React, { useContext, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { __RouterContext } from \"react-router-dom\";\nimport { initializeGameAction } from \"../store/actions/actions\";\nimport { EXIT_GAME } from \"../store/types\";\n\nexport default function Winner({ winner, matchId }) {\n  const { history } = useContext(__RouterContext);\n  const dispatch = useDispatch();\n  const [nextGame, { loading: mutationLoading }] = useMutation(\n    gql`\n      mutation NextGame($matchId: String!) {\n        nextGame(matchId: $matchId) {\n          matchId\n          gameId\n          game {\n            team1_score\n            team2_score\n            servingTeam\n          }\n        }\n      }\n    `,\n    { variables: { matchId } }\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", addArcadeListeners);\n    function addArcadeListeners(e) {\n      if (e.key === \"w\" || \"q\" || \"a\" || \"s\") {\n        nextGame().then(res => {\n          dispatch(initializeGameAction({ data: res.data.nextGame, history }));\n        });\n      }\n    }\n\n    return () => {\n      document.removeEventListener(\"keydown\", addArcadeListeners);\n    };\n  }, [dispatch, history, nextGame]);\n\n  if (winner.match) {\n    setTimeout(() => {\n      dispatch({ type: EXIT_GAME });\n      history.push(\"/match\");\n    }, 5000);\n  }\n  return winner.match ? (\n    <div className=\"winner-screen\">\n      <p>Match Winner {winner.match}</p>\n      <button\n        className=\"btn--full-width\"\n        onClick={() => {\n          dispatch({ type: EXIT_GAME });\n          history.push(\"/match\");\n        }}>\n        New Match\n      </button>\n    </div>\n  ) : (\n    <div className=\"winner-screen pi-focused\">\n      <p>Game winner {winner.game}</p>\n      <button\n        className=\"btn--full-width\"\n        onClick={() => {\n          nextGame().then(res => {\n            dispatch(\n              initializeGameAction({ data: res.data.nextGame, history })\n            );\n          });\n        }}>\n        {mutationLoading ? \"Loading...\" : \"Next Game\"}\n      </button>\n    </div>\n  );\n}\n","/* eslint-disable*/\nimport React, { useEffect } from \"react\";\nimport { __RouterContext } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { db } from \"../store/firebaseConfig\";\nimport { UPDATE_MATCH } from \"../store/types\";\nimport Game from \"../components/Game\";\nimport Winner from \"../components/Winner\";\n\nfunction CurrentMatch({ history, match: { params } }) {\n  const winner = useSelector(state => ({\n    game: state.game.winner,\n    match: state.match.winner\n  }));\n\n  return winner.game || winner.match ? (\n    <Winner winner={winner} matchId={params.matchId} />\n  ) : (\n    <Game />\n  );\n}\n\nexport default CurrentMatch;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { initializeMatchAction } from \"../store/actions/actions\";\nimport Keyboard from \"react-simple-keyboard\";\nimport \"react-simple-keyboard/build/css/index.css\";\n\nfunction NewMatch({ history }) {\n  const dispatch = useDispatch();\n  const [keyboardShowing, showKeyboard] = useState(false);\n  const [inputTarget, setInputTarget] = useState(null);\n  const [layoutName, setLayoutName] = useState(\"default\");\n  const [state, setState] = useState({\n    team1_name: \"\",\n    team2_name: \"\",\n    pointsToWin: 21,\n    gamesToWin: 2\n  });\n  const [createMatch, { loading: mutationLoading }] = useMutation(gql`\n    mutation CreateMatch(\n      $pointsToWin: Int\n      $gamesToWin: Int\n      $team1_name: String\n      $team2_name: String\n    ) {\n      createMatch(\n        pointsToWin: $pointsToWin\n        gamesToWin: $gamesToWin\n        team1_name: $team1_name\n        team2_name: $team2_name\n      ) {\n        matchId\n        gameId\n        match {\n          pointsToWin\n          gamesToWin\n          team1_name\n          team2_name\n        }\n        game {\n          team1_score\n          team2_score\n          servingTeam\n        }\n      }\n    }\n  `);\n\n  const { team1_name, team2_name, gamesToWin, pointsToWin } = state;\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]:\n        e.target.name === \"pointsToWin\" || e.target.name === \"gamesToWin\"\n          ? parseInt(e.target.value)\n          : e.target.value\n    });\n  }\n\n  function handleFocus(e) {\n    setLayoutName(e.target.name === \"pointsToWin\" ? \"numpad\" : \"default\");\n    setState({ ...state, [e.target.name]: \"\" });\n    setInputTarget(e.target.name);\n    showKeyboard(true);\n  }\n\n  return (\n    <div style={{ display: \"grid\" }} className=\"pi-focused\">\n      <form\n        className=\"new-match-form\"\n        autoComplete=\"off\"\n        onSubmit={async e => {\n          e.preventDefault();\n\n          createMatch({\n            variables: state\n          })\n            .then(res => {\n              const data = res.data.createMatch;\n\n              dispatch(initializeMatchAction({ data, history }));\n            })\n            .catch(err => console.error(err));\n        }}>\n        <div>\n          <label htmlFor=\"team1\" onFocus={e => handleFocus(e)}>\n            Team 1:\n            <input\n              value={team1_name}\n              name=\"team1_name\"\n              id=\"team1\"\n              onChange={e => handleChange(e)}\n            />\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"team2\" onFocus={e => handleFocus(e)}>\n            Team 2:\n            <input\n              value={team2_name}\n              name=\"team2_name\"\n              onChange={e => handleChange(e)}\n              id=\"team2\"\n            />\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"game-type\">\n            Best of:\n            <select\n              name=\"gamesToWin\"\n              id=\"game-type\"\n              value={gamesToWin}\n              onChange={e => handleChange(e)}>\n              <option value=\"2\">2/3</option>\n              <option value=\"1\">1</option>\n            </select>\n          </label>\n        </div>\n        <div>\n          <label\n            htmlFor=\"pointsToWin\"\n            onFocus={e => handleFocus(e)}\n            onBlur={() => {}}>\n            Points To Win:\n            <input\n              type=\"number\"\n              name=\"pointsToWin\"\n              value={pointsToWin}\n              onChange={e => handleChange(e)}\n            />\n          </label>\n        </div>\n        <button\n          disabled={keyboardShowing}\n          type=\"submit\"\n          className=\"btn--full-width\">\n          {mutationLoading ? \"Loading...\" : \"Start Match\"}\n        </button>\n      </form>\n      {keyboardShowing && (\n        <div\n          className={`keyboard__container ${\n            layoutName === \"shift\" ? \"keyboard__container--shift\" : \"\"\n          }`}>\n          <div className=\"keyboard__input\">\n            <span>{state[inputTarget]}</span>\n          </div>\n          <Keyboard\n            onChange={input => {\n              setState({\n                ...state,\n                [inputTarget]:\n                  inputTarget === \"pointsToWin\" || inputTarget === \"gamesToWin\"\n                    ? parseInt(input)\n                    : input\n              });\n            }}\n            inputName={inputTarget}\n            layoutName={layoutName}\n            layout={{\n              default: [\n                \"q w e r t y u i o p {bksp}\",\n                \"a s d f g h j k l\",\n                \"z x c v b n m\",\n                \"{shift} & {space} , {close}\"\n              ],\n              shift: [\n                \"Q W E R T Y U I O P {bksp}\",\n                \"A S D F G H J K L\",\n                \"Z X C V B N M\",\n                \"{shift} & {space} , {close}\"\n              ],\n              numpad: [\"7 8 9\", \"4 5 6\", \"1 2 3\", \" 0 {ok}\"]\n            }}\n            buttonTheme={[\n              {\n                class: \"highlight\",\n                buttons: \"{shift}\"\n              }\n            ]}\n            onKeyPress={btn => {\n              if (btn === \"{shift}\") {\n                setLayoutName(layoutName === \"default\" ? \"shift\" : \"default\");\n              }\n              if (btn === \"{close}\" || btn === \"{ok}\") {\n                showKeyboard(false);\n              }\n            }}\n            mergeDisplay={true}\n            display={{\n              \"{bksp}\": \"⌫\",\n              \"{close}\": \"✓\",\n              \"{shift}\": \"⇪\",\n              \"{ok}\": \"✓\"\n            }}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default NewMatch;\n","import React from \"react\";\nimport useLiveGame from \"../hooks/useLiveGame\";\nimport useLiveIds from \"../hooks/useLiveIds\";\n\nexport default function ScoreBoard() {\n  const { matchId, gameId } = useLiveIds();\n\n  const { loading: firebaseLoading, data: score } = useLiveGame(\n    matchId,\n    gameId,\n    { dispatch: false }\n  );\n\n  return !firebaseLoading ? (\n    <div className=\"scoreboard\">\n      <h1>Team 1: </h1>\n      <h1>Team 2: </h1>\n      <div className=\"scoreboard__score\">{score?.team1_score}</div>\n      <div className=\"scoreboard__score\">{score?.team2_score}</div>\n    </div>\n  ) : (\n    <p>Loading...</p>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { UPDATE_GAME } from \"../store/types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { gql } from \"apollo-boost\";\nimport { db } from \"../store/firebaseConfig\";\n\nexport default function useLiveIds() {\n  const dispatch = useDispatch();\n  const [data, setData] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const unsub = db.doc(\"app/activeIds\").onSnapshot(ref => {\n      console.log(\"updating game ids\");\n\n      setData(ref.data());\n      if (loading) setLoading(false);\n    });\n    return () => {\n      unsub();\n    };\n  });\n\n  return { ...data, loading };\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport ApolloClient from \"apollo-boost\";\nimport createReduxStore from \"./store/store\";\nimport firebase from \"firebase/app\";\n\n// Add the Firebase services that you want to use\nimport { Provider } from \"react-redux\";\nimport CurrentMatch from \"./pages/CurrentMatch\";\nimport NewMatch from \"./pages/NewMatch\";\nimport ScoreBoard from \"./pages/ScoreBoard\";\nimport \"./scss/App.scss\";\n\nconst store = createReduxStore(firebase);\n\nconst client = new ApolloClient();\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <Provider store={store}>\n          <Router>\n            <Switch>\n              {/* Pi Focused screens  */}\n\n              <Route path=\"/match\" exact component={NewMatch} />\n              <Route\n                path={[\"/match/:matchId/game/:gameId\"]}\n                component={CurrentMatch}\n              />\n              <Route path=\"/scoreboard\" component={ScoreBoard} />\n            </Switch>\n          </Router>\n        </Provider>\n      </ApolloProvider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}