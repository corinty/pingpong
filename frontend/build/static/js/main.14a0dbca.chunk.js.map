{"version":3,"sources":["store/db.js","store/types.js","reducers/match.reducer.js","reducers/game.reducer.js","reducers/index.Reducer.js","store/store.js","store/mutations.js","components/ScoreButton.jsx","actions/actions.js","hooks/useRegisterGamePad.js","components/Game.jsx","store/queries.js","hooks/useSubscribeToGame.js","hooks/useLiveIds.js","components/Winner.jsx","pages/CurrentMatch.jsx","pages/NewMatch.jsx","pages/LandingPage.jsx","components/ScoreBoard.jsx","components/Clock.jsx","pages/Dashboard.jsx","pages/ScorePage.jsx","App.jsx","serviceWorker.js","index.js"],"names":["firebase","initializeApp","config","db","firestore","INITIALIZE_GAME","INITIALIZE_MATCH","UPDATE_MATCH","UPDATE_GAME","UPDATE_LOCAL_GAME","EXIT_GAME","APP_ERROR","UPDATE_IDS","matchInitial","totalGamesPlayed","winner","initalGame","initialAppState","error","errorMessage","matchInit","rootReducer","combineReducers","match","state","arguments","length","undefined","action","type","payload","Object","objectSpread","game","_action$payload","team","increment","defineProperty","concat","app","_ref","matchId","gameId","initialState","middleware","thunk","withExtraArgument","getFirebase","getFirestore","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","compose","UPDATE_SCORE_MUTATION","gql","_templateObject","_templateObject2","ScoreButton","side","dispatch","useDispatch","_useSelector","useSelector","greenTeam","_useMutation","useMutation","variables","_useMutation2","slicedToArray","updateScore","mutationRunning","loading","_useState","useState","_useState2","isDisabled","setDisabled","_useState3","_useState4","justScored","setJustScored","teamInfo","name","score","useEffect","setTimeout","react_default","a","createElement","className","disabled","onClick","then","res","initializeMatchAction","data","history","_ref2","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","push","stop","_x","apply","this","initializeGameAction","_ref3","_ref4","_callee2","_context2","_x2","buttonPressedAction","_ref5","buttonColor","dif","nextGame","_ref6","_callee3","getState","_getState","isGreen","blueTeam","_context3","matchOver","pointToWin","_x3","_x4","registerButton","id","color","gamepad","rest","objectWithoutProperties","pressedOn","before","Date","after","getTime","Container","styled","div","Game_templateObject","Game","useHistory","matchState","team1_name","team2_name","serveNum","pointsToWin","components_ScoreButton","queries_templateObject","useSubscribeToGame","isTableOpen","setTableOpen","_useLiveIds","setData","setLoading","unsub","doc","onSnapshot","ref","useLiveIds","team1_score","team2_score","setGame","unsubscribeGame","unsubscribeMatch","Winner","team1","team2","isMatchOver","matchWinner","gameWinner","_state$app","Winner_templateObject","prevGreenTeam","mutationLoading","greenOrBlue","addArcadeListeners","e","key","document","addEventListener","removeEventListener","classnames","Fragment","CurrentMatch","params","_useMutation3","useRegisterGamePad_templateObject","_useMutation4","gameControl","on","neededValues","off","useRegisterGamePad","NewMatch","keyboardShowing","showKeyboard","disableButton","_useState5","_useState6","inputTarget","setInputTarget","_useState7","_useState8","layoutName","setLayoutName","_useState9","gamesToWin","loginInput","isLoggedIn","_useState10","setState","NewMatch_templateObject","createMatch","NewMatch_templateObject2","clearIds","localStorage","getItem","handleChange","target","parseInt","value","handleFocus","style","display","autoComplete","onSubmit","preventDefault","catch","err","console","htmlFor","onFocus","onChange","onBlur","setItem","build_default","input","inputName","layout","default","shift","numpad","buttonTheme","class","buttons","onKeyPress","btn","mergeDisplay","{bksp}","{close}","{shift}","{ok}","require","auth","AuthUI","LandingPage","react_router_dom","to","ScoreBoard","_match$gamesWon","_match$gamesWon2","_useSubscribeToGame","isOpen","gamesPlayed","gamesWon","gridColumn","isNaN","TeamScore","green","Clock","time","updateTime","timerID","setInterval","newTime","date","hours","getHours","minutes","getMinutes","ampm","formatAMPM","clearInterval","Dashboard","ScorePage","LogRocket","init","firebaseInstance","store","createStore","applyMiddleware","reduxFirestore","client","ApolloClient","App","react_common_esm","react_redux_es","react_router","path","exact","component","React","Component","Boolean","location","hostname","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.14a0dbca.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport config from \"../firestore.config.json\";\nfirebase.initializeApp(config);\n\nexport const db = firebase.firestore();\n\nexport default config;\n\n","export const INITIALIZE_GAME = \"INITIALIZE_GAME\";\nexport const INITIALIZE_MATCH = \"INITIALIZE_MATCH\";\n\nexport const CREATE_GAME = \"CREATE_GAME\";\nexport const UPDATE_MATCH = \"UPDATE_MATCH\";\nexport const UPDATE_GAME = \"UPDATE_GAME\";\nexport const UPDATE_LOCAL_GAME = \"UPDATE_LOCAL_GAME\";\nexport const UPDATE_TEAM_NAMES = \"UPDATE_TEAM_NAMES\";\nexport const CLEAR_GAME = \"CLEAR_GAME\";\nexport const EXIT_GAME = \"EXIT_GAME\";\nexport const APP_ERROR = \"APP_ERROR\";\n\nexport const DECLARE_WINNER = \"DECLARE_WINNER\";\nexport const UPDATE_IDS = \"UPDATE_IDS\";\nexport const INCREMENT = \"INCREMENT\";\nexport const DECREMENT = \"DECREMENT\";\nexport const SWAP_SERVE = \"SWAP_SERVE\";\n","import { UPDATE_MATCH, EXIT_GAME, INITIALIZE_MATCH, DECLARE_WINNER } from \"../store/types\";\n\nexport const matchInitial = {\n    totalGamesPlayed: 0,\n    winner: null,\n};\nexport default function gameReducer(state = matchInitial, action) {\n    switch (action.type) {\n        case INITIALIZE_MATCH:\n            return action.payload.match;\n\n        case UPDATE_MATCH:\n            return {\n                ...state,\n                ...action.payload,\n            };\n\n        case EXIT_GAME:\n            return {};\n\n        default:\n            return state;\n    }\n}\n","import {\n    CLEAR_GAME,\n    INCREMENT,\n    DECREMENT,\n    INITIALIZE_GAME,\n    INITIALIZE_MATCH,\n    UPDATE_GAME,\n    EXIT_GAME,\n    DECLARE_WINNER,\n    UPDATE_LOCAL_GAME,\n} from \"../store/types\";\n\nexport const initalGame = {};\n\nexport default function gameReducer(state = initalGame, action) {\n    switch (action.type) {\n        case INITIALIZE_MATCH:\n            return { ...action.payload.game };\n        case INITIALIZE_GAME:\n            return { ...action.payload.game };\n        case UPDATE_GAME:\n            return action.payload || state;\n        case UPDATE_LOCAL_GAME:\n            const { team, increment } = action.payload;\n            return {\n                ...state,\n                [`${team}_score`]: increment\n                    ? state[`${team}_score`] + 1\n                    : state[`${team}_score`] - 1,\n            };\n        case EXIT_GAME:\n            return {};\n\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\nimport { APP_ERROR, INITIALIZE_MATCH, EXIT_GAME, UPDATE_MATCH, UPDATE_IDS } from \"../store/types\";\nimport matchReducer from \"./match.reducer\";\nimport gameReducer from \"./game.reducer\";\n\nexport const initialAppState = {\n    error: false,\n    errorMessage: \"\",\n    matchInit: false,\n};\n\nfunction app(state = initialAppState, { type, error, payload }) {\n    switch (type) {\n        case INITIALIZE_MATCH:\n            return {\n                ...state,\n                matchId: payload.matchId,\n                gameId: payload.gameId,\n                matchInit: true,\n            };\n        case UPDATE_MATCH:\n            return {\n                ...state,\n                matchInit: true,\n            };\n        case UPDATE_IDS:\n            return {\n                ...state,\n                ...payload,\n            };\n        case APP_ERROR:\n            return { ...state, error: true, errorMessage: error };\n        case EXIT_GAME:\n            return { ...initialAppState, matchInit: false };\n        default:\n            return state;\n    }\n}\n\nexport const rootReducer = combineReducers({\n    match: matchReducer,\n    game: gameReducer,\n    app,\n});\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { getFirestore, reduxFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./db\";\nimport rootReducer from \"../reducers/index.Reducer\";\n\n// Create store with reducers and initial state\nconst initialState = {};\n\nconst middleware = [thunk.withExtraArgument({ getFirebase, getFirestore })];\nconst composeEnhancers =\n    typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n        ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n              trace: true,\n          })\n        : compose;\nexport default firebaseInstance => {\n    return createStore(\n        rootReducer,\n        initialState,\n        composeEnhancers(applyMiddleware(...middleware), reduxFirestore(firebaseInstance))\n    );\n};\n","import { gql } from \"apollo-boost\";\n\nexport const UPDATE_SCORE_MUTATION = gql`\n    mutation UpdateScore(\n        $matchId: String!\n        $gameId: String!\n        $team: TeamEnum!\n        $increment: Boolean!\n    ) {\n        updateScore(matchId: $matchId, gameId: $gameId, team: $team, increment: $increment) {\n            team1_score\n            team2_score\n            greenTeam\n        }\n    }\n`;\n\nexport const DECLARE_WINNER_MUTAION = gql`\n    mutation DeclareWinner($matchId: String!, $gameId: String!, $winner: TeamEnum!) {\n        declareWinner(matchId: $matchId, gameId: $gameId, winner: $winner) {\n            winner\n            gamesWon {\n                team1\n                team2\n            }\n        }\n    }\n`;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { __RouterContext } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { UPDATE_SCORE_MUTATION } from \"../store/mutations\";\nimport { UPDATE_LOCAL_GAME } from \"../store/types\";\n\nconst ScoreButton = ({ side }) => {\n    const dispatch = useDispatch();\n    const { greenTeam, matchId, gameId } = useSelector(state => ({\n        greenTeam: state.game.greenTeam,\n        matchId: state.app.matchId,\n        gameId: state.app.gameId,\n    }));\n\n    const [updateScore, { loading: mutationRunning }] = useMutation(UPDATE_SCORE_MUTATION, {\n        variables: { matchId, gameId },\n    });\n    const [isDisabled, setDisabled] = useState(false);\n    const [justScored, setJustScored] = useState(false);\n    const team = side === \"green\" ? greenTeam : greenTeam === \"team1\" ? \"team2\" : \"team1\";\n    const teamInfo = useSelector(state => {\n        return {\n            name: state.match[`${team}_name`],\n            score: state.game[`${team}_score`],\n        };\n    });\n    const { name, score } = teamInfo;\n    useEffect(() => {\n        if (teamInfo.score === 0 || teamInfo.score === undefined) return;\n        setJustScored(true);\n        setTimeout(() => {\n            setJustScored(false);\n        }, 650);\n    }, [teamInfo.score]);\n\n    return (\n        <button\n            className={\"btn--increment \" + side + `${justScored ? \" scored\" : \"\"}`}\n            disabled={mutationRunning && isDisabled}\n            onClick={() => {\n                setDisabled(true);\n                dispatch({ type: UPDATE_LOCAL_GAME, payload: { team, increment: true } });\n                updateScore({\n                    variables: {\n                        team,\n                        increment: true,\n                    },\n                }).then(res => {\n                    setDisabled(false);\n                });\n            }}>\n            <p className=\"team-name\">{name && name.length > 0 ? name : team}</p>\n            <p className=\"score\">{score}</p>\n        </button>\n    );\n};\n\nexport default ScoreButton;\n","import {\n    INITIALIZE_MATCH,\n    UPDATE_LOCAL_GAME,\n    INITIALIZE_GAME,\n    DECLARE_WINNER,\n    EXIT_GAME,\n} from \"../store/types\";\n\nexport const initializeMatchAction = ({ data, history }) => {\n    return async dispatch => {\n        dispatch({ type: INITIALIZE_MATCH, payload: data });\n\n        history.push(`/match/${data.matchId}/game/${data.gameId}`, { ...data });\n    };\n};\nexport const initializeGameAction = ({ data, history }) => {\n    return async dispatch => {\n        // dispatch({ type: INITIALIZE_GAME, payload: { game: { ...data.game } } });\n\n        history.push(`/match/${data.matchId}/game/${data.gameId}`, { ...data });\n    };\n};\n\nexport const buttonPressedAction = ({ buttonColor, dif, updateScore, nextGame, history }) => {\n    return async (dispatch, getState) => {\n        const { game, app, match } = getState();\n        const isGreen = buttonColor === \"green\";\n        const blueTeam = game.greenTeam === \"team1\" ? \"team2\" : \"team1\";\n        if (!app.matchId || !app.gameId) {\n            dispatch({ type: EXIT_GAME });\n            history.push(\"/match\");\n        } else if (match.winner || match.matchOver) {\n            dispatch({ type: EXIT_GAME });\n            history.push(\"/match\");\n        } else if (game.winner) {\n            nextGame().then(res => {\n                dispatch(initializeGameAction({ data: res.data.nextGame, history }));\n            });\n        } else {\n            dispatch({\n                type: UPDATE_LOCAL_GAME,\n                payload: {\n                    team: isGreen ? game.greenTeam : blueTeam,\n                    score: game[`${isGreen ? game.greenTeam : blueTeam}_score`],\n                    increment: dif <= 450 ? true : false,\n                },\n            });\n            updateScore({\n                variables: {\n                    team: isGreen ? game.greenTeam : blueTeam,\n                    score: game[`${isGreen ? game.greenTeam : blueTeam}_score`],\n                    increment: dif <= 450 ? true : false,\n                    pointToWin: match.pointToWin,\n                    matchId: app.matchId,\n                    gameId: app.gameId,\n                },\n            });\n        }\n    };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gameControl from \"gamecontroller.js/src/gamecontrol\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { gql } from \"apollo-boost\";\nimport { buttonPressedAction } from \"../actions/actions\";\nimport { UPDATE_SCORE_MUTATION } from \"../store/mutations\";\n\nexport default function useRegisterGamePad() {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { matchId, gameId, greenTeam } = useSelector(state => {\n        return {\n            matchId: state.app.matchId,\n            gameId: state.app.gameId,\n            greenTeam: state.game.greenTeam,\n        };\n    });\n    const [updateScore, { loading: mutationRunning }] = useMutation(UPDATE_SCORE_MUTATION);\n    const [nextGame, { loading: mutationLoading }] = useMutation(\n        gql`\n            mutation NextGame($matchId: String!, $prevGreenTeam: TeamEnum!) {\n                nextGame(matchId: $matchId, prevGreenTeam: $prevGreenTeam) {\n                    matchId\n                    gameId\n                    game {\n                        team1_score\n                        team2_score\n                        servingTeam\n                    }\n                }\n            }\n        `,\n        { variables: { matchId, prevGreenTeam: greenTeam } }\n    );\n    useEffect(() => {\n        gameControl.on(\"connect\", function(gamepad) {\n            const neededValues = {\n                gamepad,\n                dispatch,\n                updateScore,\n                nextGame,\n                history,\n            };\n            registerButton({ id: \"button0\", color: \"green\", ...neededValues });\n            registerButton({ id: \"button3\", color: \"blue\", ...neededValues });\n        });\n        return () => {\n            gameControl.off(\"connect\");\n        };\n    }, [matchId, gameId]);\n}\n\nfunction registerButton({ id, color, gamepad, dispatch, ...rest }) {\n    let pressedOn = {};\n\n    gamepad\n        .before(id, () => {\n            pressedOn = new Date();\n        })\n        .after(id, () => {\n            const releasedOn = new Date();\n            var dif = releasedOn.getTime() - pressedOn.getTime();\n\n            dispatch(buttonPressedAction({ buttonColor: color, dif, ...rest }));\n        });\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Redirect, useHistory } from \"react-router-dom\";\n\nimport { gql } from \"apollo-boost\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { SWAP_SERVE, CLEAR_GAME, EXIT_GAME } from \"../store/types\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { UPDATE_SCORE_MUTATION } from \"../store/mutations\";\n\nimport ScoreButton from \"./ScoreButton\";\nimport useRegisterGamePad from \"../hooks/useRegisterGamePad\";\n\nconst Container = styled.div`\n    display: grid;\n    position: relative;\n    grid-template-columns: 1fr 50px 1fr;\n`;\n\nexport default function Game() {\n    /**\n     * Component data\n     */\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const matchState = useSelector(state => ({\n        ...state.match,\n        ...state.app,\n        game: state.game,\n    }));\n\n    const { team1_name, team2_name, serveNum, pointsToWin, game, matchId, gameId } = matchState;\n\n    return (\n        <Container className=\"pi-focused\">\n            <ScoreButton side=\"green\" />\n            <div\n                className=\"center-btns\"\n                onClick={() => {\n                    dispatch({ type: EXIT_GAME });\n                    history.push(\"/match\");\n                }}\n            />\n\n            <ScoreButton side=\"blue\" />\n        </Container>\n    );\n}\n","import { gql } from \"apollo-boost\";\n\nexport const ACTIVE_MATCH_QUERY = gql`\n  query getActiveMatch {\n    activeMatch {\n      matchId\n      gameId\n      match {\n        gamesToWin\n        pointsToWin\n        team1_name\n        team2_name\n      }\n      game {\n        team1_score\n        team2_score\n        servingTeam\n      }\n    }\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { UPDATE_GAME, UPDATE_MATCH } from \"../store/types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { gql } from \"apollo-boost\";\nimport { db } from \"../store/db\";\nimport { ACTIVE_MATCH_QUERY } from \"../store/queries\";\n\nimport useLiveIds from \"./useLiveIds\";\n\nexport default function useSubscribeToGame(navigateAway = true) {\n    const dispatch = useDispatch();\n    const [isTableOpen, setTableOpen] = useState(true);\n    const { matchId, gameId, loading } = useLiveIds();\n\n    const [game, setGame] = useState({\n        team1_score: 0,\n        team2_score: 0,\n    });\n\n    // Listen to the score of the live game\n    useEffect(() => {\n        if (loading) return;\n\n        setTableOpen(!matchId || !gameId ? true : false);\n\n        const unsubscribeGame = db.doc(`matches/${matchId}/games/${gameId}`).onSnapshot(ref => {\n            setGame(ref.data());\n\n            dispatch({ type: UPDATE_GAME, payload: ref.data() });\n        });\n        const unsubscribeMatch = db.doc(`matches/${matchId}`).onSnapshot(ref => {\n            dispatch({ type: UPDATE_MATCH, payload: ref.data() });\n        });\n\n        return () => {\n            unsubscribeGame();\n            unsubscribeMatch();\n        };\n    }, [matchId, gameId, loading]);\n    return { loading, isTableOpen };\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { UPDATE_GAME, UPDATE_IDS } from \"../store/types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { gql } from \"apollo-boost\";\nimport { db } from \"../store/db\";\n\nexport default function useLiveIds() {\n  const dispatch = useDispatch();\n  const [data, setData] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const unsub = db.doc(\"app/activeIds\").onSnapshot(ref => {\n      setData(ref.data());\n      dispatch({ type: UPDATE_IDS, payload: ref.data() });\n      if (loading) setLoading(false);\n    });\n    return () => {\n      unsub();\n    };\n  }, []);\n\n  return { ...data, loading };\n}\n","import React, { useContext, useEffect } from \"react\";\nimport classnames from \"classnames\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { useHistory } from \"react-router-dom\";\nimport { initializeGameAction } from \"..//actions/actions\";\nimport { EXIT_GAME } from \"../store/types\";\nimport useSubscribeToGame from \"../hooks/useSubscribeToGame\";\n\nexport default function Winner() {\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const greenTeam = useSelector(state => state.game.greenTeam);\n    const state = useSelector(state => ({\n        team1: { name: state.match.team1_name, score: state.game.team1_score },\n        team2: { name: state.match.team2_name, score: state.game.team2_score },\n        match: state.match,\n        greenTeam: state.game.greenTeam,\n        isMatchOver: state.match.winner !== null,\n        matchWinner: state.match.winner,\n        gameWinner: state.game.winner,\n        app: state.app,\n    }));\n\n    const {\n        app: { matchId, gameId },\n        match,\n        isMatchOver,\n        gameWinner,\n        matchWinner,\n    } = state;\n\n    const [nextGame, { loading: mutationLoading }] = useMutation(\n        gql`\n            mutation NextGame($matchId: String!, $prevGreenTeam: TeamEnum!) {\n                nextGame(matchId: $matchId, prevGreenTeam: $prevGreenTeam) {\n                    matchId\n                    gameId\n                    game {\n                        team1_score\n                        team2_score\n                        servingTeam\n                    }\n                }\n            }\n        `,\n        { variables: { matchId, prevGreenTeam: greenTeam } }\n    );\n    const greenOrBlue = isMatchOver\n        ? matchWinner === greenTeam\n            ? \"green\"\n            : gameWinner === greenTeam\n            ? \"green\"\n            : \"blue\"\n        : \"blue\";\n\n    useEffect(() => {\n        document.addEventListener(\"keydown\", addArcadeListeners);\n        function addArcadeListeners(e) {\n            if (e.key === \"w\" || \"q\" || \"a\" || \"s\") {\n                nextGame().then(res => {\n                    dispatch(initializeGameAction({ data: res.data.nextGame, history }));\n                });\n            }\n        }\n\n        return () => {\n            document.removeEventListener(\"keydown\", addArcadeListeners);\n        };\n    }, [dispatch, history, nextGame]);\n\n    // if (isMatchOver) {\n    //   setTimeout(() => {\n    //     dispatch({ type: EXIT_GAME });\n    //     history.push(\"/match\");\n    //   }, 10000);\n    // }\n    if (!gameWinner) {\n        return (\n            <>\n                <p>Unknown Error</p>\n                <button onClick={() => history.push(\"/match\")}>New Match Screen</button>\n            </>\n        );\n    }\n\n    return (\n        <div className={classnames(\"winner-screen pi-focused\", greenOrBlue)}>\n            <p>\n                {isMatchOver\n                    ? `${state[matchWinner].name} wins the match!`\n                    : `${state[gameWinner].name} wins the game!`}\n            </p>\n            <button\n                className=\"btn--full-width\"\n                onClick={() => {\n                    if (isMatchOver || match.matchOver) {\n                        dispatch({ type: EXIT_GAME });\n                        history.push(\"/match\");\n                    } else {\n                        nextGame().then(res => {\n                            dispatch(initializeGameAction({ data: res.data.nextGame, history }));\n                        });\n                    }\n                }}>\n                {isMatchOver || match.matchOver\n                    ? \"New Match\"\n                    : !mutationLoading\n                    ? \"Next Game\"\n                    : \"Loading...\"}\n            </button>\n        </div>\n    );\n}\n","/* eslint-disable*/\nimport React, { useEffect } from \"react\";\nimport { __RouterContext, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { db } from \"../store/db\";\nimport { UPDATE_MATCH } from \"../store/types\";\nimport Game from \"../components/Game\";\nimport Winner from \"../components/Winner\";\nimport useRegisterGamePad from \"../hooks/useRegisterGamePad\";\nimport useSubscribeToGame from \"../hooks/useSubscribeToGame\";\n\nimport { ACTIVE_MATCH_QUERY } from \"../store/queries\";\n\nfunction CurrentMatch({ history, match: { params } }) {\n    const matchInit = useSelector(state => state.app.matchInit);\n    const matchId = useSelector(state => state.app.matchId);\n    const winner = useSelector(state => state.game.winner);\n    useRegisterGamePad();\n    const { loading } = useSubscribeToGame();\n\n    // return !matchId ? <Redirect to=\"/match\" /> : <Game />;\n    if (winner) {\n        return <Winner />;\n    }\n    return loading ? <p>Loading...</p> : <Game />;\n}\n\nexport default CurrentMatch;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { db } from \"../store/db\";\nimport { initializeMatchAction } from \"../actions/actions\";\nimport Keyboard from \"react-simple-keyboard\";\nimport \"react-simple-keyboard/build/css/index.css\";\n\nfunction NewMatch({ history }) {\n    const dispatch = useDispatch();\n    const [keyboardShowing, showKeyboard] = useState(false);\n    const [isDisabled, disableButton] = useState(false);\n    const [inputTarget, setInputTarget] = useState(null);\n    const [layoutName, setLayoutName] = useState(\"default\");\n    const [state, setState] = useState({\n        team1_name: \"\",\n        team2_name: \"\",\n        pointsToWin: 21,\n        gamesToWin: 3,\n        loginInput: \"\",\n        isLoggedIn: false,\n    });\n\n    const [createMatch, { loading: mutationLoading }] = useMutation(gql`\n        mutation CreateMatch(\n            $pointsToWin: Int\n            $gamesToWin: Int\n            $team1_name: String\n            $team2_name: String\n        ) {\n            createMatch(\n                pointsToWin: $pointsToWin\n                gamesToWin: $gamesToWin\n                team1_name: $team1_name\n                team2_name: $team2_name\n            ) {\n                matchId\n                gameId\n                match {\n                    pointsToWin\n                    gamesToWin\n                    team1_name\n                    team2_name\n                }\n                game {\n                    team1_score\n                    team2_score\n                    servingTeam\n                }\n            }\n        }\n    `);\n    const [clearIds, { data }] = useMutation(gql`\n        mutation {\n            clearIds\n        }\n    `);\n    useEffect(() => {\n        if (localStorage.getItem(\"pingPongTracker3000\")) {\n            setState({ ...state, isLoggedIn: true });\n        }\n\n        clearIds();\n    }, []);\n\n    const { team1_name, team2_name, gamesToWin, pointsToWin, loginInput, isLoggedIn } = state;\n    function handleChange(e) {\n        setState({\n            ...state,\n            [e.target.name]:\n                e.target.name === \"pointsToWin\" || e.target.name === \"gamesToWin\"\n                    ? parseInt(e.target.value)\n                    : e.target.value,\n        });\n    }\n\n    function handleFocus(e) {\n        disableButton(true);\n        setLayoutName(e.target.name === \"pointsToWin\" ? \"numpad\" : \"default\");\n        setState({ ...state, [e.target.name]: \"\" });\n        setInputTarget(e.target.name);\n        showKeyboard(true);\n    }\n\n    return (\n        <div style={{ display: \"grid\" }} className=\"pi-focused\">\n            {isLoggedIn ? (\n                <form\n                    className=\"new-match-form\"\n                    autoComplete=\"off\"\n                    onSubmit={async e => {\n                        e.preventDefault();\n\n                        createMatch({\n                            variables: state,\n                        })\n                            .then(res => {\n                                const data = res.data.createMatch;\n                                dispatch(initializeMatchAction({ data, history }));\n                            })\n                            .catch(err => console.error(err));\n                    }}>\n                    <div>\n                        <label htmlFor=\"team1\" onFocus={e => handleFocus(e)}>\n                            Green:\n                            <input\n                                value={team1_name}\n                                name=\"team1_name\"\n                                id=\"team1\"\n                                onChange={e => handleChange(e)}\n                            />\n                        </label>\n                    </div>\n                    <div>\n                        <label htmlFor=\"team2\" onFocus={e => handleFocus(e)}>\n                            Blue:\n                            <input\n                                value={team2_name}\n                                name=\"team2_name\"\n                                onChange={e => handleChange(e)}\n                                id=\"team2\"\n                            />\n                        </label>\n                    </div>\n                    <div>\n                        <label htmlFor=\"game-type\">\n                            Games To Play:\n                            <select\n                                name=\"gamesToWin\"\n                                id=\"game-type\"\n                                value={gamesToWin}\n                                onChange={e => handleChange(e)}>\n                                <option value=\"3\">3</option>\n                                <option value=\"2\">2/3</option>\n                                <option value=\"1\">1</option>\n                            </select>\n                        </label>\n                    </div>\n                    <div>\n                        <label\n                            htmlFor=\"pointsToWin\"\n                            onFocus={e => handleFocus(e)}\n                            onBlur={() => {}}>\n                            Points To Win:\n                            <input\n                                type=\"number\"\n                                name=\"pointsToWin\"\n                                value={pointsToWin}\n                                onChange={e => handleChange(e)}\n                            />\n                        </label>\n                    </div>\n\n                    <button disabled={isDisabled} type=\"submit\" className=\"btn--full-width\">\n                        {mutationLoading ? \"Loading...\" : \"Start Match\"}\n                    </button>\n                </form>\n            ) : (\n                <div className=\"pi-login-screen\">\n                    <form\n                        onSubmit={e => {\n                            e.preventDefault();\n                            //TODO:: Implement a real login setup\n                            if (state.loginInput === \"pingpong\") {\n                                setState({\n                                    ...state,\n                                    loginInput: \"\",\n                                    isLoggedIn: true,\n                                });\n                                localStorage.setItem(\"pingPongTracker3000\", true);\n                                showKeyboard(false);\n                            } else {\n                                setState({ ...state, loginInput: \"\" });\n                            }\n                        }}>\n                        <label htmlFor=\"piLbogin\" onFocus={e => handleFocus(e)} onBlur={() => {}}>\n                            Login:\n                            <input\n                                type=\"string\"\n                                value={state.loginInput}\n                                name=\"loginInput\"\n                                onChange={e => handleChange(e)}\n                            />\n                        </label>\n                        <button type=\"submit\">Enter</button>\n                    </form>\n                </div>\n            )}\n            {keyboardShowing && (\n                <div\n                    className={`keyboard__container ${\n                        layoutName === \"shift\" ? \"keyboard__container--shift\" : \"\"\n                    }`}>\n                    <div className=\"keyboard__input\">\n                        <span>{state[inputTarget]}</span>\n                    </div>\n                    <Keyboard\n                        onChange={input => {\n                            setState({\n                                ...state,\n                                [inputTarget]:\n                                    inputTarget === \"pointsToWin\" || inputTarget === \"gamesToWin\"\n                                        ? parseInt(input)\n                                        : input,\n                            });\n                        }}\n                        inputName={inputTarget}\n                        layoutName={layoutName}\n                        layout={{\n                            default: [\n                                \"q w e r t y u i o p {bksp}\",\n                                \"a s d f g h j k l\",\n                                \"z x c v b n m\",\n                                \"{shift} & {space} , {close}\",\n                            ],\n                            shift: [\n                                \"Q W E R T Y U I O P {bksp}\",\n                                \"A S D F G H J K L\",\n                                \"Z X C V B N M\",\n                                \"{shift} & {space} , {close}\",\n                            ],\n                            numpad: [\"7 8 9\", \"4 5 6\", \"1 2 3\", \"{bksp} 0 {ok}\"],\n                        }}\n                        buttonTheme={[\n                            {\n                                class: \"highlight\",\n                                buttons: \"{shift}\",\n                            },\n                        ]}\n                        onKeyPress={btn => {\n                            if (btn === \"{shift}\") {\n                                setLayoutName(layoutName === \"default\" ? \"shift\" : \"default\");\n                            }\n                            if (btn === \"{close}\" || btn === \"{ok}\") {\n                                showKeyboard(false);\n                                setTimeout(() => {\n                                    disableButton(false);\n                                }, 100);\n                            }\n                        }}\n                        mergeDisplay={true}\n                        display={{\n                            \"{bksp}\": \"⌫\",\n                            \"{close}\": \"✓\",\n                            \"{shift}\": \"⇪\",\n                            \"{ok}\": \"✓\",\n                        }}\n                    />\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default NewMatch;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nvar firebase = require(\"firebase\");\nvar firebaseui = require(\"firebaseui\");\n\nconst ui = new firebaseui.auth.AuthUI(firebase.auth());\nexport default function LandingPage() {\n    const actionCodeSettings = {\n        // URL you want to redirect back to. The domain (www.example.com) for this\n        // URL must be whitelisted in the Firebase Console.\n        url: \"http://localhost:3000\",\n        // This must be true.\n        handleCodeInApp: true,\n        iOS: {\n            bundleId: \"com.example.ios\",\n        },\n        android: {\n            packageName: \"com.example.android\",\n            installApp: true,\n            minimumVersion: \"12\",\n        },\n        dynamicLinkDomain: \"example.page.link\",\n    };\n\n    useEffect(() => {\n        // ui.start(\"#signin\", {\n        //     signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID],\n        //     // Other config options...\n        // });\n    }, []);\n    return (\n        <div className=\"landing-page\">\n            <p>Welcome</p>\n            <Link to=\"/match\">Start Pi Based Tracker</Link>\n            <Link to=\"/scoreboard\">Scoreboard</Link>\n            <Link to=\"/dashbaord\">Dashboard</Link>\n            <div id=\"signin\"></div>\n        </div>\n    );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport useSubscribeToGame from \"../hooks/useSubscribeToGame\";\n\nexport default function ScoreBoard() {\n    const { loading, isOpen } = useSubscribeToGame(false);\n    const state = useSelector(state => ({\n        team1: { name: state.match.team1_name, score: state.game.team1_score },\n        team2: { name: state.match.team2_name, score: state.game.team2_score },\n        game: state.game,\n        match: state.match,\n        isMatchOver: state.match.winner !== null,\n        matchId: state.app.matchId,\n        gameId: state.app.gameId,\n        matchWinner: state.match.winner,\n        gameWinner: state.game.winner,\n    }));\n    const { game, match, matchId, gameId, isMatchOver, matchWinner, gameWinner } = state;\n    const { greenTeam } = game;\n    const blueTeam = game.greenTeam === \"team1\" ? \"team2\" : \"team1\";\n    const gamesPlayed = match.gamesWon?.team1 + match.gamesWon?.team2;\n\n    return !loading ? (\n        !matchId ? (\n            <div className=\"scoreboard\">\n                <p className=\"open-table\">\n                    Table\n                    <br /> Open\n                </p>\n            </div>\n        ) : (\n            <div className=\"scoreboard\">\n                <div className=\"games-played\" style={{ gridColumn: \"span 2\" }}>\n                    <p>\n                        Game {isNaN(gamesPlayed) ? 0 : gamesPlayed + 1} of {match.gamesToWin}\n                    </p>\n                </div>\n                {!game.winner && (\n                    <>\n                        <TeamScore\n                            score={game[`${greenTeam}_score`]}\n                            team={match[`${greenTeam}_name`]}\n                            green\n                        />\n                        <TeamScore\n                            score={game[`${blueTeam}_score`]}\n                            team={match[`${blueTeam}_name`]}\n                        />\n                    </>\n                )}\n                {game.winner && (\n                    <div className=\"winner-state\">\n                        <p>\n                            {isMatchOver\n                                ? `${state[matchWinner].name} wins the match!`\n                                : `${state[gameWinner].name} wins the game!`}\n                        </p>\n                    </div>\n                )}\n            </div>\n        )\n    ) : (\n        <p>Loading...</p>\n    );\n}\n\nfunction TeamScore({ score, team, green }) {\n    return (\n        <div className={`team-score ${green ? \"green\" : \"\"}`}>\n            <h1>{team}</h1>\n            <div className=\"scoreboard__score\">{score}</div>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\n\nexport default function Clock() {\n    const [time, updateTime] = useState();\n\n    useEffect(() => {\n        var timerID = setInterval(function() {\n            const newTime = formatAMPM(new Date());\n            if (newTime === time) return;\n            updateTime(newTime);\n        }, 1000);\n\n        return () => clearInterval(timerID);\n    }, [time]);\n    return <div>{time}</div>;\n}\n\nfunction formatAMPM(date) {\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    var ampm = hours >= 12 ? \"pm\" : \"am\";\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    var strTime = hours + \":\" + minutes + \" \" + ampm;\n    return strTime;\n}\n","import React from \"react\";\nimport Scoreboard from \"../components/ScoreBoard\";\nimport Clock from \"../components/Clock\";\nexport default function Dashboard() {\n    return (\n        <div className=\"dashboard\">\n            <div className=\"widget-table-status\">\n                <Scoreboard></Scoreboard>\n            </div>\n\n            <div className=\"widget-video\"></div>\n\n            <div className=\"widget-time\">\n                <Clock></Clock>\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport ScoreBoard from \"../components/ScoreBoard\";\n\nexport default function ScorePage() {\n    return (\n        <div className=\"scoreboard-page\">\n            <ScoreBoard></ScoreBoard>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport ApolloClient from \"apollo-boost\";\nimport createReduxStore from \"./store/store\";\nimport firebase from \"firebase/app\";\n\n// Add the Firebase services that you want to use\nimport { Provider } from \"react-redux\";\nimport CurrentMatch from \"./pages/CurrentMatch\";\nimport NewMatch from \"./pages/NewMatch\";\nimport LandingPage from \"./pages/LandingPage\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Winner from \"./components/Winner\";\nimport ScorePage from \"./pages/ScorePage\";\nimport \"./scss/App.scss\";\n\nimport LogRocket from \"logrocket\";\nLogRocket.init(\"mgellb/ping-pong\");\n\nconst store = createReduxStore(firebase);\n\nconst client = new ApolloClient();\n\nexport default class App extends React.Component {\n    render() {\n        return (\n            <ApolloProvider client={client}>\n                <Provider store={store}>\n                    <Router>\n                        <Switch>\n                            {/* Pi Focused screens  */}\n                            <Route path={\"/\"} exact component={LandingPage} />\n                            <Route path={\"/match\"} exact component={NewMatch} />\n                            <Route\n                                path={[\"/match/:matchId/game/:gameId\"]}\n                                component={CurrentMatch}\n                            />\n                            <Route path=\"/scoreboard\" component={ScorePage} />\n                            <Route path=\"/dashbaord\" component={Dashboard} />\n                            <Route path=\"/match/winner\" component={Winner} />\n                        </Switch>\n                    </Router>\n                </Provider>\n            </ApolloProvider>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}