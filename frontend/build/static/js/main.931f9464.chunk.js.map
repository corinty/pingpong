{"version":3,"sources":["store/firebaseConfig.js","store/types.js","store/reducers/match.reducer.js","store/reducers/game.reducer.js","store/reducers/index.Reducer.js","store/store.js","store/mutations.js","hooks/useLiveGame.js","components/ScoreButton.jsx","components/Game.jsx","hooks/useCheckForWinner.js","store/actions/actions.js","components/Winner.jsx","store/queries.js","pages/CurrentMatch.jsx","pages/NewMatch.jsx","pages/ScoreBoard.jsx","hooks/useLiveIds.js","App.jsx","serviceWorker.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","db","firestore","INITIALIZE_GAME","INITIALIZE_MATCH","UPDATE_MATCH","UPDATE_GAME","EXIT_GAME","APP_ERROR","INCREMENT","DECREMENT","matchInitial","totalGamesPlayed","winner","initalGame","initialAppState","error","errorMessage","matchInit","rootReducer","combineReducers","match","state","arguments","length","undefined","action","type","payload","__typename","Object","objectSpread","game","_objectSpread2","_objectSpread3","switchServe","serveNum","defineProperty","team","whoServes","app","_ref","matchId","gameId","initialState","middleware","thunk","withExtraArgument","getFirebase","getFirestore","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","UPDATE_SCORE_MUTATION","gql","_templateObject","DECLARE_WINNER_MUTAION","_templateObject2","useLiveGameDispatch","shouldDispatch","dispatch","useDispatch","_useState","useState","team1_score","team2_score","_useState2","slicedToArray","data","setData","_useState3","_useState4","loading","setLoading","useEffect","unsubscribe","doc","concat","onSnapshot","ref","ScoreButton","side","_useContext","useContext","__RouterContext","_useContext$match$par","history","params","_useMutation","useMutation","variables","_useMutation2","updateScore","mutationRunning","isDisabled","setDisabled","greenTeam","useSelector","teamInfo","name","score","react_default","a","createElement","className","disabled","onClick","increment","then","res","Container","styled","div","Game_templateObject","Game","matchState","team1","team2","team1_name","team2_name","pointsToWin","_useLiveGame","useLiveGame","liveGame","setWinner","_useQuery","useQuery","useCheckForWinner_templateObject","fetchPolicy","loadingQuery","_data$activeMatch$mat","activeMatch","entries","find","_ref2","_ref3","Math","abs","results","sort","b","winnerObj","finalScore","winningTeam","console","log","declareWinner","_useMutation2$","useCheckForWinner","addArcadeListeners","e","blueTeam","key","document","addEventListener","removeEventListener","components_ScoreButton","push","initializeMatchAction","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_x","apply","this","initializeGameAction","_ref4","_callee2","_context2","_x2","Winner","teamNames","Winner_templateObject","prevGreenTeam","nextGame","mutationLoading","setTimeout","ACTIVE_MATCH_QUERY","queries_templateObject","CurrentMatch","_data$activeMatch","NewMatch","keyboardShowing","showKeyboard","inputTarget","setInputTarget","_useState5","_useState6","layoutName","setLayoutName","_useState7","gamesToWin","_useState8","setState","NewMatch_templateObject","createMatch","handleChange","target","parseInt","value","handleFocus","style","display","autoComplete","onSubmit","preventDefault","catch","err","htmlFor","onFocus","id","onChange","onBlur","build_default","input","inputName","layout","default","shift","numpad","buttonTheme","class","buttons","onKeyPress","btn","mergeDisplay","{bksp}","{close}","{shift}","{ok}","ScoreBoard","_useLiveIds","unsub","useLiveIds","firebaseLoading","lib","firebaseInstance","store","createStore","applyMiddleware","reduxFirestore","client","ApolloClient","App","react_common_esm","react_redux_es","react_router_dom","react_router","path","exact","component","React","Component","Boolean","location","hostname","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.931f9464.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nconst config = {\n  apiKey: \"AIzaSyCcrzECR6WLk_YtsCk6rUMbNxfFh0cn__8\",\n  authDomain: \"tydev-ping-pong.firebaseapp.com\",\n  databaseURL: \"https://tydev-ping-pong.firebaseio.com\",\n  projectId: \"tydev-ping-pong\",\n  storageBucket: \"tydev-ping-pong.appspot.com\",\n  messagingSenderId: \"29869586839\",\n  appId: \"1:29869586839:web:080ae459d72aa8f6\"\n};\n\nfirebase.initializeApp(config);\n\nexport const db = firebase.firestore();\n\nexport default config;\n","export const INITIALIZE_GAME = \"INITIALIZE_GAME\";\nexport const INITIALIZE_MATCH = \"INITIALIZE_MATCH\";\n\nexport const CREATE_GAME = \"CREATE_GAME\";\nexport const UPDATE_MATCH = \"UPDATE_MATCH\";\nexport const UPDATE_GAME = \"UPDATE_GAME\";\nexport const UPDATE_TEAM_NAMES = \"UPDATE_TEAM_NAMES\";\nexport const CLEAR_GAME = \"CLEAR_GAME\";\nexport const EXIT_GAME = \"EXIT_GAME\";\nexport const APP_ERROR = \"APP_ERROR\";\n\nexport const DECLARE_WINNER = \"DECLARE_WINNER\";\nexport const INCREMENT = \"INCREMENT\";\nexport const DECREMENT = \"DECREMENT\";\nexport const SWAP_SERVE = \"SWAP_SERVE\";\n","import { UPDATE_MATCH, EXIT_GAME, INITIALIZE_MATCH } from \"../types\";\n\nexport const matchInitial = {\n  totalGamesPlayed: 0,\n  winner: null\n};\nexport default function gameReducer(state = matchInitial, action) {\n  switch (action.type) {\n    case INITIALIZE_MATCH:\n      delete action.payload.match.__typename;\n      return action.payload.match;\n\n    case UPDATE_MATCH:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case EXIT_GAME:\n      return {};\n\n    default:\n      return state;\n  }\n}\n","import {\n  CLEAR_GAME,\n  INCREMENT,\n  DECREMENT,\n  INITIALIZE_GAME,\n  INITIALIZE_MATCH,\n  UPDATE_GAME,\n  EXIT_GAME\n} from \"../types\";\n\nexport const initalGame = {};\n\nexport default function gameReducer(state = initalGame, action) {\n  switch (action.type) {\n    case INITIALIZE_MATCH:\n      delete action.payload.game.__typename;\n      return { ...action.payload.game };\n    case INITIALIZE_GAME:\n      return { ...action.payload.game };\n    case UPDATE_GAME:\n      return action.payload || state;\n    case EXIT_GAME:\n      return {};\n    case INCREMENT:\n      let switchServe = state.serveNum === 5;\n      return {\n        ...state,\n        [action.team]: state[action.team] + 1,\n        // serveNum: state.serveNum === 5 ? 1 : state.serveNum + 1,\n        whoServes: switchServe\n          ? state.whoServes === \"team1\"\n            ? \"team2\"\n            : \"team1\"\n          : state.whoServes\n      };\n    case DECREMENT:\n      if (state[action.team] === 0) return state;\n      return {\n        ...state,\n        [action.team]: state[action.team] - 1,\n        serveNum: state.serveNum === 1 ? 5 : state.serveNum - 1,\n        whoServes:\n          state.serveNum !== 1\n            ? state.whoServes\n            : state.whoServes === \"team1\"\n            ? \"team2\"\n            : \"team1\"\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { APP_ERROR, INITIALIZE_MATCH, EXIT_GAME, UPDATE_MATCH } from \"../types\";\nimport matchReducer from \"./match.reducer\";\nimport gameReducer from \"./game.reducer\";\n\nexport const initialAppState = {\n  error: false,\n  errorMessage: \"\",\n  matchInit: false\n};\n\nfunction app(state = initialAppState, { type, error, payload }) {\n  switch (type) {\n    case INITIALIZE_MATCH:\n      return {\n        ...state,\n        matchId: payload.matchId,\n        gameId: payload.gameId,\n        matchInit: true\n      };\n    case UPDATE_MATCH:\n      return {\n        ...state,\n        matchInit: true\n      };\n    case APP_ERROR:\n      return { ...state, error: true, errorMessage: error };\n    case EXIT_GAME:\n      return { ...initialAppState, matchInit: false };\n    default:\n      return state;\n  }\n}\n\nexport const rootReducer = combineReducers({\n  match: matchReducer,\n  game: gameReducer,\n  app\n});\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { getFirestore, reduxFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./firebaseConfig\";\nimport rootReducer from \"./reducers/index.Reducer\";\n\n// Create store with reducers and initial state\nconst initialState = {};\n\nconst middleware = [thunk.withExtraArgument({ getFirebase, getFirestore })];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport default firebaseInstance => {\n  return createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(\n      applyMiddleware(...middleware),\n      reduxFirestore(firebaseInstance)\n    )\n  );\n};\n","import { gql } from \"apollo-boost\";\n\nexport const UPDATE_SCORE_MUTATION = gql`\n  mutation UpdateScore(\n    $matchId: String!\n    $gameId: String!\n    $team: TeamEnum!\n    $score: Int!\n    $increment: Boolean!\n  ) {\n    updateScore(\n      matchId: $matchId\n      gameId: $gameId\n      team: $team\n      increment: $increment\n      score: $score\n    ) {\n      team1_score\n      team2_score\n      greenTeam\n    }\n  }\n`;\n\nexport const DECLARE_WINNER_MUTAION = gql`\n  mutation DeclareWinner(\n    $matchId: String!\n    $gameId: String!\n    $winner: TeamEnum!\n  ) {\n    declareWinner(matchId: $matchId, gameId: $gameId, winner: $winner) {\n      winner\n      gamesWon {\n        team1\n        team2\n      }\n    }\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { UPDATE_GAME } from \"../store/types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { gql } from \"apollo-boost\";\nimport { db } from \"../store/firebaseConfig\";\n\nexport default function useLiveGameDispatch(\n  matchId,\n  gameId,\n  { dispatch: shouldDispatch } = { dispatch: true }\n) {\n  const dispatch = useDispatch();\n  const [data, setData] = useState({ team1_score: 0, team2_score: 0 });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (!matchId || !gameId) return;\n    const unsubscribe = db\n      .doc(`matches/${matchId}/games/${gameId}`)\n      .onSnapshot(ref => {\n        setData(ref.data());\n        if (shouldDispatch) {\n          dispatch({ type: UPDATE_GAME, payload: ref.data() });\n        }\n\n        if (loading) setLoading(false);\n      });\n    return () => {\n      unsubscribe();\n    };\n  }, [dispatch, gameId, loading, matchId, shouldDispatch]);\n\n  return { data, loading };\n}\n","import React, { useContext, useState } from \"react\";\nimport { __RouterContext } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { UPDATE_SCORE_MUTATION } from \"../store/mutations\";\n\nconst ScoreButton = ({ side }) => {\n  const {\n    history,\n    match: {\n      params: { matchId, gameId }\n    }\n  } = useContext(__RouterContext);\n  const [updateScore, { loading: mutationRunning }] = useMutation(\n    UPDATE_SCORE_MUTATION,\n    { variables: { matchId, gameId } }\n  );\n  const [isDisabled, setDisabled] = useState(false);\n  const greenTeam = useSelector(state => state.game.greenTeam);\n  const team =\n    side === \"green\" ? greenTeam : greenTeam === \"team1\" ? \"team2\" : \"team1\";\n  const teamInfo = useSelector(state => {\n    return {\n      name: state.match[`${team}_name`],\n      score: state.game[`${team}_score`]\n    };\n  });\n  const { name, score } = teamInfo;\n\n  return (\n    <button\n      className={\"btn--increment \" + side}\n      disabled={mutationRunning && isDisabled}\n      onClick={() => {\n        setDisabled(true);\n        updateScore({\n          variables: {\n            team,\n            score,\n            increment: true\n          }\n        }).then(res => {\n          setDisabled(false);\n        });\n      }}>\n      <p className=\"team-name\">{name && name.length > 0 ? name : team}</p>\n      <p className=\"score\">{score}</p>\n    </button>\n  );\n};\n\nexport default ScoreButton;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { __RouterContext } from \"react-router-dom\";\n\nimport { gql } from \"apollo-boost\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { SWAP_SERVE, CLEAR_GAME, EXIT_GAME } from \"../store/types\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { UPDATE_SCORE_MUTATION } from \"../store/mutations\";\nimport useLiveGame from \"../hooks/useLiveGame\";\nimport useCheckForWinner from \"../hooks/useCheckForWinner\";\n\nimport ScoreButton from \"./ScoreButton\";\n\nconst Container = styled.div`\n  display: grid;\n  height: 100%;\n  position: relative;\n  grid-template-columns: 1fr 50px 1fr;\n`;\n\nexport default function Game() {\n  /**\n   * Component data\n   */\n  const {\n    history,\n    match: {\n      params: { matchId, gameId }\n    }\n  } = useContext(__RouterContext);\n\n  const dispatch = useDispatch();\n  const matchState = useSelector(state => ({\n    ...state.match,\n    ...state.app,\n    game: state.game\n  }));\n  const [updatingScore, setUpdatingScore] = useState({\n    team1: false,\n    team2: false\n  });\n\n  const { team1_name, team2_name, serveNum, pointsToWin, game } = matchState;\n\n  const { data: liveGame, loading } = useLiveGame(matchId, gameId);\n  const winner = useCheckForWinner({\n    team1_score: liveGame.team1_score,\n    team2_score: liveGame.team2_score\n  });\n\n  const [updateScore, { loading: mutationRunning }] = useMutation(\n    UPDATE_SCORE_MUTATION,\n    { variables: { matchId, gameId } }\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", addArcadeListeners);\n    function addArcadeListeners(e) {\n      const blueTeam = game.greenTeam === \"team1\" ? \"team2\" : \"team1\";\n\n      switch (e.key) {\n        case \"q\":\n          updateScore({\n            variables: {\n              team: game.greenTeam,\n              score: game[`${game.greenTeam}_score`],\n              increment: true\n            }\n          });\n          break;\n        case \"a\":\n          updateScore({\n            variables: {\n              team: game.greenTeam,\n              score: game[`${game.greenTeam}_score`],\n              increment: false\n            }\n          });\n          break;\n        case \"w\":\n          updateScore({\n            variables: {\n              team: blueTeam,\n              score: game[`${blueTeam}_score`],\n              increment: true\n            }\n          });\n          break;\n        case \"s\":\n          updateScore({\n            variables: {\n              team: blueTeam,\n              score: game[`${blueTeam}_score`],\n              increment: false\n            }\n          });\n          break;\n        default:\n      }\n    }\n    return () => {\n      document.removeEventListener(\"keydown\", addArcadeListeners);\n    };\n  }, [dispatch, updateScore, game]);\n\n  // return <p>back to data testing</p>;\n\n  return loading ? null : (\n    <Container className=\"pi-focused\">\n      <ScoreButton side=\"green\" />\n\n      <div\n        className=\"center-btns\"\n        onClick={() => {\n          dispatch({ type: EXIT_GAME });\n          history.push(\"/match\");\n        }}\n      />\n\n      <ScoreButton side=\"blue\" />\n    </Container>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { UPDATE_MATCH } from \"../store/types\";\nimport { DECLARE_WINNER_MUTAION } from \"../store/mutations\";\n\nexport default function useCheckForWinner({ team1_score, team2_score }) {\n  const dispatch = useDispatch();\n  const [winner, setWinner] = useState(null);\n  const { data, loading: loadingQuery } = useQuery(\n    gql`\n      query getActiveMatch {\n        activeMatch {\n          matchId\n          gameId\n          match {\n            winner\n            pointsToWin\n          }\n        }\n      }\n    `,\n    { fetchPolicy: \"network-only\" }\n  );\n\n  /**\n   * Logic to check if there should be a game winner\n   */\n  useEffect(() => {\n    const score = {\n      team1: team1_score,\n      team2: team2_score\n    };\n\n    if (loadingQuery) return;\n    const {\n      match: { pointsToWin, winner }\n    } = data.activeMatch;\n\n    const checkForWinner = Object.entries(score).find(\n      ([team, score]) => score >= pointsToWin\n    );\n\n    if (checkForWinner && Math.abs(team1_score - team2_score) > 1) {\n      const results = Object.entries(score).sort((a, b) => {\n        return a[1] < b[1] ? 1 : -1;\n      })[0];\n      const winnerObj = {\n        finalScore: { team1_score, team2_score },\n        winningTeam: results[0]\n      };\n      console.log(winnerObj);\n\n      setWinner(winnerObj);\n    }\n  }, [data.activeMatch, loadingQuery, team1_score, team2_score]);\n\n  /**\n   * Declare winner mutation\n   */ const [declareWinner, { data: mutationData, error }] = useMutation(\n    DECLARE_WINNER_MUTAION\n  );\n  useEffect(() => {\n    if (!winner || loadingQuery) return;\n    declareWinner({\n      variables: {\n        matchId: data.activeMatch.matchId,\n        gameId: data.activeMatch.gameId,\n        winner: winner.winningTeam\n      }\n    }).then(res => {\n      dispatch({ type: UPDATE_MATCH, payload: res.data.declareWinner });\n    });\n  }, [data, declareWinner, dispatch, loadingQuery, winner]);\n\n  return winner;\n}\n","import { INITIALIZE_MATCH, INITIALIZE_GAME } from \"../types\";\n\nexport const initializeMatchAction = ({ data, history }) => {\n  return async dispatch => {\n    dispatch({ type: INITIALIZE_MATCH, payload: data });\n\n    history.push(`/match/${data.matchId}/game/${data.gameId}`, { ...data });\n  };\n};\nexport const initializeGameAction = ({ data, history }) => {\n  return async dispatch => {\n    dispatch({ type: INITIALIZE_GAME, payload: data.game });\n\n    history.push(`/match/${data.matchId}/game/${data.gameId}`, { ...data });\n  };\n};\n","import React, { useContext, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { __RouterContext } from \"react-router-dom\";\nimport { initializeGameAction } from \"../store/actions/actions\";\nimport { EXIT_GAME } from \"../store/types\";\n\nexport default function Winner({ winner, matchId }) {\n  const { history } = useContext(__RouterContext);\n  const dispatch = useDispatch();\n  const greenTeam = useSelector(state => state.game.greenTeam);\n  const teamNames = useSelector(state => ({\n    team1: state.match.team1_name,\n    team2: state.match.team2_name\n  }));\n\n  const [nextGame, { loading: mutationLoading }] = useMutation(\n    gql`\n      mutation NextGame($matchId: String!, $prevGreenTeam: TeamEnum!) {\n        nextGame(matchId: $matchId, prevGreenTeam: $prevGreenTeam) {\n          matchId\n          gameId\n          game {\n            team1_score\n            team2_score\n            servingTeam\n          }\n        }\n      }\n    `,\n    { variables: { matchId, prevGreenTeam: greenTeam } }\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", addArcadeListeners);\n    function addArcadeListeners(e) {\n      if (e.key === \"w\" || \"q\" || \"a\" || \"s\") {\n        nextGame().then(res => {\n          dispatch(initializeGameAction({ data: res.data.nextGame, history }));\n        });\n      }\n    }\n\n    return () => {\n      document.removeEventListener(\"keydown\", addArcadeListeners);\n    };\n  }, [dispatch, history, nextGame]);\n\n  if (winner.match) {\n    setTimeout(() => {\n      dispatch({ type: EXIT_GAME });\n      history.push(\"/match\");\n    }, 5000);\n  }\n\n  return (\n    <div className=\"winner-screen pi-focused\">\n      <p>\n        {winner.match\n          ? `${teamNames[winner.match]} wins the Match!`\n          : `${teamNames[winner.game]} wins the Game!`}\n      </p>\n      <button\n        className=\"btn--full-width\"\n        onClick={() => {\n          if (winner.match) {\n            dispatch({ type: EXIT_GAME });\n            history.push(\"/match\");\n          } else {\n            nextGame().then(res => {\n              dispatch(\n                initializeGameAction({ data: res.data.nextGame, history })\n              );\n            });\n          }\n        }}>\n        {winner.match\n          ? \"New Match\"\n          : !mutationLoading\n          ? \"Next Game\"\n          : \"Loading...\"}\n      </button>\n    </div>\n  );\n}\n","import gql from \"graphql-tag\";\n\nexport const ACTIVE_MATCH_QUERY = gql`\n  query getActiveMatch {\n    activeMatch {\n      matchId\n      gameId\n      match {\n        gamesToWin\n        pointsToWin\n        team1_name\n        team2_name\n      }\n      game {\n        team1_score\n        team2_score\n        servingTeam\n      }\n    }\n  }\n`;\n","/* eslint-disable*/\nimport React, { useEffect } from \"react\";\nimport { __RouterContext } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { db } from \"../store/firebaseConfig\";\nimport { UPDATE_MATCH } from \"../store/types\";\nimport Game from \"../components/Game\";\nimport Winner from \"../components/Winner\";\nimport { ACTIVE_MATCH_QUERY } from \"../store/queries\";\n\nfunction CurrentMatch({ history, match: { params } }) {\n  const matchInit = useSelector(state => state.app.matchInit);\n  const dispatch = useDispatch();\n\n  const { data, loading } = useQuery(ACTIVE_MATCH_QUERY, {\n    fetchPolicy: \"network-only\"\n  });\n\n  useEffect(() => {\n    if (loading) return;\n    dispatch({ type: UPDATE_MATCH, payload: data.activeMatch?.match });\n  }, [data]);\n\n  const winner = useSelector(state => ({\n    game: state.game.winner,\n    match: state.match.winner\n  }));\n\n  return winner.game || winner.match ? (\n    <Winner winner={winner} matchId={params.matchId} />\n  ) : (\n    <Game />\n  );\n}\n\nexport default CurrentMatch;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { initializeMatchAction } from \"../store/actions/actions\";\nimport Keyboard from \"react-simple-keyboard\";\nimport \"react-simple-keyboard/build/css/index.css\";\n\nfunction NewMatch({ history }) {\n  const dispatch = useDispatch();\n  const [keyboardShowing, showKeyboard] = useState(false);\n  const [inputTarget, setInputTarget] = useState(null);\n  const [layoutName, setLayoutName] = useState(\"default\");\n  const [state, setState] = useState({\n    team1_name: \"\",\n    team2_name: \"\",\n    pointsToWin: 21,\n    gamesToWin: 2\n  });\n  const [createMatch, { loading: mutationLoading }] = useMutation(gql`\n    mutation CreateMatch(\n      $pointsToWin: Int\n      $gamesToWin: Int\n      $team1_name: String\n      $team2_name: String\n    ) {\n      createMatch(\n        pointsToWin: $pointsToWin\n        gamesToWin: $gamesToWin\n        team1_name: $team1_name\n        team2_name: $team2_name\n      ) {\n        matchId\n        gameId\n        match {\n          pointsToWin\n          gamesToWin\n          team1_name\n          team2_name\n        }\n        game {\n          team1_score\n          team2_score\n          servingTeam\n        }\n      }\n    }\n  `);\n\n  const { team1_name, team2_name, gamesToWin, pointsToWin } = state;\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]:\n        e.target.name === \"pointsToWin\" || e.target.name === \"gamesToWin\"\n          ? parseInt(e.target.value)\n          : e.target.value\n    });\n  }\n\n  function handleFocus(e) {\n    setLayoutName(e.target.name === \"pointsToWin\" ? \"numpad\" : \"default\");\n    setState({ ...state, [e.target.name]: \"\" });\n    setInputTarget(e.target.name);\n    showKeyboard(true);\n  }\n\n  return (\n    <div style={{ display: \"grid\" }} className=\"pi-focused\">\n      <form\n        className=\"new-match-form\"\n        autoComplete=\"off\"\n        onSubmit={async e => {\n          e.preventDefault();\n\n          createMatch({\n            variables: state\n          })\n            .then(res => {\n              const data = res.data.createMatch;\n\n              dispatch(initializeMatchAction({ data, history }));\n            })\n            .catch(err => console.error(err));\n        }}>\n        <div>\n          <label htmlFor=\"team1\" onFocus={e => handleFocus(e)}>\n            Green:\n            <input\n              value={team1_name}\n              name=\"team1_name\"\n              id=\"team1\"\n              onChange={e => handleChange(e)}\n            />\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"team2\" onFocus={e => handleFocus(e)}>\n            Blue:\n            <input\n              value={team2_name}\n              name=\"team2_name\"\n              onChange={e => handleChange(e)}\n              id=\"team2\"\n            />\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"game-type\">\n            Best of:\n            <select\n              name=\"gamesToWin\"\n              id=\"game-type\"\n              value={gamesToWin}\n              onChange={e => handleChange(e)}>\n              <option value=\"2\">2/3</option>\n              <option value=\"1\">1</option>\n            </select>\n          </label>\n        </div>\n        <div>\n          <label\n            htmlFor=\"pointsToWin\"\n            onFocus={e => handleFocus(e)}\n            onBlur={() => {}}>\n            Points To Win:\n            <input\n              type=\"number\"\n              name=\"pointsToWin\"\n              value={pointsToWin}\n              onChange={e => handleChange(e)}\n            />\n          </label>\n        </div>\n        <button\n          disabled={keyboardShowing}\n          type=\"submit\"\n          className=\"btn--full-width\">\n          {mutationLoading ? \"Loading...\" : \"Start Match\"}\n        </button>\n      </form>\n      {keyboardShowing && (\n        <div\n          className={`keyboard__container ${\n            layoutName === \"shift\" ? \"keyboard__container--shift\" : \"\"\n          }`}>\n          <div className=\"keyboard__input\">\n            <span>{state[inputTarget]}</span>\n          </div>\n          <Keyboard\n            onChange={input => {\n              setState({\n                ...state,\n                [inputTarget]:\n                  inputTarget === \"pointsToWin\" || inputTarget === \"gamesToWin\"\n                    ? parseInt(input)\n                    : input\n              });\n            }}\n            inputName={inputTarget}\n            layoutName={layoutName}\n            layout={{\n              default: [\n                \"q w e r t y u i o p {bksp}\",\n                \"a s d f g h j k l\",\n                \"z x c v b n m\",\n                \"{shift} & {space} , {close}\"\n              ],\n              shift: [\n                \"Q W E R T Y U I O P {bksp}\",\n                \"A S D F G H J K L\",\n                \"Z X C V B N M\",\n                \"{shift} & {space} , {close}\"\n              ],\n              numpad: [\"7 8 9\", \"4 5 6\", \"1 2 3\", \" 0 {ok}\"]\n            }}\n            buttonTheme={[\n              {\n                class: \"highlight\",\n                buttons: \"{shift}\"\n              }\n            ]}\n            onKeyPress={btn => {\n              if (btn === \"{shift}\") {\n                setLayoutName(layoutName === \"default\" ? \"shift\" : \"default\");\n              }\n              if (btn === \"{close}\" || btn === \"{ok}\") {\n                showKeyboard(false);\n              }\n            }}\n            mergeDisplay={true}\n            display={{\n              \"{bksp}\": \"⌫\",\n              \"{close}\": \"✓\",\n              \"{shift}\": \"⇪\",\n              \"{ok}\": \"✓\"\n            }}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default NewMatch;\n","import React from \"react\";\nimport { Textfit } from \"react-textfit\";\nimport useLiveGame from \"../hooks/useLiveGame\";\nimport useLiveIds from \"../hooks/useLiveIds\";\n\nexport default function ScoreBoard() {\n  const { matchId, gameId } = useLiveIds();\n\n  const { loading: firebaseLoading, data: score } = useLiveGame(\n    matchId,\n    gameId,\n    { dispatch: false }\n  );\n\n  return !firebaseLoading ? (\n    <div className=\"scoreboard\">\n      <h1>Team 1: </h1>\n      <h1>Team 2: </h1>\n      <div className=\"scoreboard__score\">\n        <Textfit>{score?.team1_score}</Textfit>\n      </div>\n      <div className=\"scoreboard__score\">\n        <Textfit>{score?.team2_score}</Textfit>\n      </div>\n    </div>\n  ) : (\n    <p>Loading...</p>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { UPDATE_GAME } from \"../store/types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { gql } from \"apollo-boost\";\nimport { db } from \"../store/firebaseConfig\";\n\nexport default function useLiveIds() {\n  const dispatch = useDispatch();\n  const [data, setData] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const unsub = db.doc(\"app/activeIds\").onSnapshot(ref => {\n      setData(ref.data());\n      if (loading) setLoading(false);\n    });\n    return () => {\n      unsub();\n    };\n  }, []);\n\n  return { ...data, loading };\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport ApolloClient from \"apollo-boost\";\nimport createReduxStore from \"./store/store\";\nimport firebase from \"firebase/app\";\n\n// Add the Firebase services that you want to use\nimport { Provider } from \"react-redux\";\nimport CurrentMatch from \"./pages/CurrentMatch\";\nimport NewMatch from \"./pages/NewMatch\";\nimport ScoreBoard from \"./pages/ScoreBoard\";\nimport \"./scss/App.scss\";\n\nconst store = createReduxStore(firebase);\n\nconst client = new ApolloClient();\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <Provider store={store}>\n          <Router>\n            <Switch>\n              {/* Pi Focused screens  */}\n\n              <Route path=\"/match\" exact component={NewMatch} />\n              <Route\n                path={[\"/match/:matchId/game/:gameId\"]}\n                component={CurrentMatch}\n              />\n              <Route path=\"/scoreboard\" component={ScoreBoard} />\n            </Switch>\n          </Router>\n        </Provider>\n      </ApolloProvider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}