{"version":3,"sources":["store/firebaseConfig.js","store/types.js","store/reducers/match.reducer.js","store/reducers/game.reducer.js","store/reducers/index.Reducer.js","store/store.js","store/mutations.js","store/queries.js","store/actions/actions.js","hooks/useLiveIds.js","hooks/useSubscribeToGame.js","hooks/useCheckForWinner.js","components/ScoreButton.jsx","hooks/useRegisterGamePad.js","components/Game.jsx","components/Winner.jsx","pages/CurrentMatch.jsx","pages/NewMatch.jsx","pages/ScoreBoard.jsx","App.jsx","serviceWorker.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","db","firestore","INITIALIZE_GAME","INITIALIZE_MATCH","UPDATE_MATCH","UPDATE_GAME","EXIT_GAME","APP_ERROR","DECLARE_WINNER","UPDATE_IDS","matchInitial","totalGamesPlayed","winner","initalGame","initialAppState","error","errorMessage","matchInit","rootReducer","combineReducers","match","state","arguments","length","undefined","action","type","payload","__typename","Object","objectSpread","game","app","_ref","matchId","gameId","initialState","middleware","thunk","withExtraArgument","getFirebase","getFirestore","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","UPDATE_SCORE_MUTATION","gql","_templateObject","DECLARE_WINNER_MUTAION","_templateObject2","ACTIVE_MATCH_QUERY","queries_templateObject","initializeMatchAction","data","history","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","push","concat","stop","_x","apply","this","initializeGameAction","_ref3","_ref4","_callee2","_context2","_x2","buttonPressedAction","_ref5","buttonColor","dif","updateScore","nextGame","_ref6","_callee3","getState","_getState","isGreen","blueTeam","_context3","greenTeam","then","res","variables","team","score","increment","_x3","_x4","useLiveIds","useDispatch","_useState","useState","_useState2","slicedToArray","setData","_useState3","_useState4","loading","setLoading","useEffect","unsub","doc","onSnapshot","ref","useSubscribeToGame","_useLiveIds","team1_score","team2_score","setGame","unsubscribeGame","unsubscribeMatch","useHistory","setWinner","_useQuery","useQuery","useCheckForWinner_templateObject","fetchPolicy","loadingQuery","team1","team2","_data$activeMatch$mat","activeMatch","pointsToWin","entries","find","Math","abs","results","sort","b","winnerObj","finalScore","winningTeam","_useMutation","useMutation","_useMutation2","declareWinner","_useMutation2$","useCheckForWinner","ScoreButton","side","_useContext","useContext","__RouterContext","_useContext$match$par","params","mutationRunning","isDisabled","setDisabled","justScored","setJustScored","useSelector","teamInfo","name","console","log","setTimeout","react_default","createElement","className","disabled","onClick","registerButton","id","color","gamepad","rest","objectWithoutProperties","pressedOn","before","Date","after","getTime","Container","styled","div","Game_templateObject","Game","_useSelector","_useMutation3","useRegisterGamePad_templateObject","prevGreenTeam","_useMutation4","gameControl","on","neededValues","off","useRegisterGamePad","matchState","team1_name","team2_name","serveNum","components_ScoreButton","Winner","isMatchOver","matchWinner","gameWinner","_state$app","Winner_templateObject","mutationLoading","greenOrBlue","addArcadeListeners","e","key","document","addEventListener","removeEventListener","classnames","Fragment","CurrentMatch","_data$activeMatch","NewMatch","keyboardShowing","showKeyboard","inputTarget","setInputTarget","_useState5","_useState6","layoutName","setLayoutName","_useState7","gamesToWin","_useState8","setState","NewMatch_templateObject","createMatch","handleChange","defineProperty","target","parseInt","value","handleFocus","style","display","autoComplete","onSubmit","preventDefault","catch","err","htmlFor","onFocus","onChange","onBlur","build_default","input","inputName","layout","default","shift","numpad","buttonTheme","class","buttons","onKeyPress","btn","mergeDisplay","{bksp}","{close}","{shift}","{ok}","ScoreBoard","_data$activeMatch2","ScoreBoard_templateObject","refetchNames","refetch","_useSubscribeToGame","firebaseLoading","TeamScore","firebaseInstance","store","createStore","applyMiddleware","reduxFirestore","client","ApolloClient","App","react_common_esm","react_redux_es","react_router_dom","react_router","path","exact","component","React","Component","Boolean","location","hostname","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.00863d3d.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nconst config = {\n  apiKey: \"AIzaSyCcrzECR6WLk_YtsCk6rUMbNxfFh0cn__8\",\n  authDomain: \"tydev-ping-pong.firebaseapp.com\",\n  databaseURL: \"https://tydev-ping-pong.firebaseio.com\",\n  projectId: \"tydev-ping-pong\",\n  storageBucket: \"tydev-ping-pong.appspot.com\",\n  messagingSenderId: \"29869586839\",\n  appId: \"1:29869586839:web:080ae459d72aa8f6\"\n};\n\nfirebase.initializeApp(config);\n\nexport const db = firebase.firestore();\n\nexport default config;\n","export const INITIALIZE_GAME = \"INITIALIZE_GAME\";\nexport const INITIALIZE_MATCH = \"INITIALIZE_MATCH\";\n\nexport const CREATE_GAME = \"CREATE_GAME\";\nexport const UPDATE_MATCH = \"UPDATE_MATCH\";\nexport const UPDATE_GAME = \"UPDATE_GAME\";\nexport const UPDATE_TEAM_NAMES = \"UPDATE_TEAM_NAMES\";\nexport const CLEAR_GAME = \"CLEAR_GAME\";\nexport const EXIT_GAME = \"EXIT_GAME\";\nexport const APP_ERROR = \"APP_ERROR\";\n\nexport const DECLARE_WINNER = \"DECLARE_WINNER\";\nexport const UPDATE_IDS = \"UPDATE_IDS\";\nexport const INCREMENT = \"INCREMENT\";\nexport const DECREMENT = \"DECREMENT\";\nexport const SWAP_SERVE = \"SWAP_SERVE\";\n","import {\n  UPDATE_MATCH,\n  EXIT_GAME,\n  INITIALIZE_MATCH,\n  DECLARE_WINNER\n} from \"../types\";\n\nexport const matchInitial = {\n  totalGamesPlayed: 0,\n  winner: null\n};\nexport default function gameReducer(state = matchInitial, action) {\n  switch (action.type) {\n    case INITIALIZE_MATCH:\n      delete action.payload.match.__typename;\n      return action.payload.match;\n\n    case UPDATE_MATCH:\n      return {\n        ...state,\n        ...action.payload\n      };\n\n    case EXIT_GAME:\n      return {};\n\n    default:\n      return state;\n  }\n}\n","import {\n  CLEAR_GAME,\n  INCREMENT,\n  DECREMENT,\n  INITIALIZE_GAME,\n  INITIALIZE_MATCH,\n  UPDATE_GAME,\n  EXIT_GAME,\n  DECLARE_WINNER\n} from \"../types\";\n\nexport const initalGame = {};\n\nexport default function gameReducer(state = initalGame, action) {\n  switch (action.type) {\n    case INITIALIZE_MATCH:\n      return { ...action.payload.game };\n    case INITIALIZE_GAME:\n      return { ...action.payload.game };\n    case UPDATE_GAME:\n      return action.payload || state;\n\n    case EXIT_GAME:\n      return {};\n    // case INCREMENT:\n    //   let switchServe = state.serveNum === 5;\n    //   return {\n    //     ...state,\n    //     [action.team]: state[action.team] + 1,\n    //     // serveNum: state.serveNum === 5 ? 1 : state.serveNum + 1,\n    //     whoServes: switchServe\n    //       ? state.whoServes === \"team1\"\n    //         ? \"team2\"\n    //         : \"team1\"\n    //       : state.whoServes\n    //   };\n    // case DECREMENT:\n    //   if (state[action.team] === 0) return state;\n    //   return {\n    //     ...state,\n    //     [action.team]: state[action.team] - 1,\n    //     serveNum: state.serveNum === 1 ? 5 : state.serveNum - 1,\n    //     whoServes:\n    //       state.serveNum !== 1\n    //         ? state.whoServes\n    //         : state.whoServes === \"team1\"\n    //         ? \"team2\"\n    //         : \"team1\"\n    //   };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport {\n  APP_ERROR,\n  INITIALIZE_MATCH,\n  EXIT_GAME,\n  UPDATE_MATCH,\n  UPDATE_IDS\n} from \"../types\";\nimport matchReducer from \"./match.reducer\";\nimport gameReducer from \"./game.reducer\";\n\nexport const initialAppState = {\n  error: false,\n  errorMessage: \"\",\n  matchInit: false\n};\n\nfunction app(state = initialAppState, { type, error, payload }) {\n  switch (type) {\n    case INITIALIZE_MATCH:\n      return {\n        ...state,\n        matchId: payload.matchId,\n        gameId: payload.gameId,\n        matchInit: true\n      };\n    case UPDATE_MATCH:\n      return {\n        ...state,\n        matchInit: true\n      };\n    case UPDATE_IDS:\n      return {\n        ...state,\n        ...payload\n      };\n    case APP_ERROR:\n      return { ...state, error: true, errorMessage: error };\n    case EXIT_GAME:\n      return { ...initialAppState, matchInit: false };\n    default:\n      return state;\n  }\n}\n\nexport const rootReducer = combineReducers({\n  match: matchReducer,\n  game: gameReducer,\n  app\n});\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { getFirestore, reduxFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./firebaseConfig\";\nimport rootReducer from \"./reducers/index.Reducer\";\n\n// Create store with reducers and initial state\nconst initialState = {};\n\nconst middleware = [thunk.withExtraArgument({ getFirebase, getFirestore })];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport default firebaseInstance => {\n  return createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(\n      applyMiddleware(...middleware),\n      reduxFirestore(firebaseInstance)\n    )\n  );\n};\n","import { gql } from \"apollo-boost\";\n\nexport const UPDATE_SCORE_MUTATION = gql`\n  mutation UpdateScore(\n    $matchId: String!\n    $gameId: String!\n    $team: TeamEnum!\n    $score: Int!\n    $increment: Boolean!\n  ) {\n    updateScore(\n      matchId: $matchId\n      gameId: $gameId\n      team: $team\n      increment: $increment\n      score: $score\n    ) {\n      team1_score\n      team2_score\n      greenTeam\n    }\n  }\n`;\n\nexport const DECLARE_WINNER_MUTAION = gql`\n  mutation DeclareWinner(\n    $matchId: String!\n    $gameId: String!\n    $winner: TeamEnum!\n  ) {\n    declareWinner(matchId: $matchId, gameId: $gameId, winner: $winner) {\n      winner\n      gamesWon {\n        team1\n        team2\n      }\n    }\n  }\n`;\n","import { gql } from \"apollo-boost\";\n\nexport const ACTIVE_MATCH_QUERY = gql`\n  query getActiveMatch {\n    activeMatch {\n      matchId\n      gameId\n      match {\n        gamesToWin\n        pointsToWin\n        team1_name\n        team2_name\n      }\n      game {\n        team1_score\n        team2_score\n        servingTeam\n      }\n    }\n  }\n`;\n","import {\n  INITIALIZE_MATCH,\n  INITIALIZE_GAME,\n  DECLARE_WINNER,\n  EXIT_GAME\n} from \"../types\";\n\nexport const initializeMatchAction = ({ data, history }) => {\n  return async dispatch => {\n    dispatch({ type: INITIALIZE_MATCH, payload: data });\n\n    history.push(`/match/${data.matchId}/game/${data.gameId}`, { ...data });\n  };\n};\nexport const initializeGameAction = ({ data, history }) => {\n  return async dispatch => {\n    dispatch({ type: INITIALIZE_GAME, payload: data.game });\n\n    history.push(`/match/${data.matchId}/game/${data.gameId}`, { ...data });\n  };\n};\n\nexport const buttonPressedAction = ({\n  buttonColor,\n  dif,\n  updateScore,\n  nextGame,\n  history\n}) => {\n  return async (dispatch, getState) => {\n    const { game, app, match } = getState();\n    const isGreen = buttonColor === \"green\";\n    const blueTeam = game.greenTeam === \"team1\" ? \"team2\" : \"team1\";\n    if (!app.matchInit) {\n      // TODO Start match when buttons is pressed\n    } else if (match.winner) {\n      dispatch({ type: EXIT_GAME });\n      history.push(\"/match\");\n    } else if (game.winner) {\n      nextGame().then(res => {\n        dispatch(initializeGameAction({ data: res.data.nextGame, history }));\n      });\n    } else {\n      updateScore({\n        variables: {\n          team: isGreen ? game.greenTeam : blueTeam,\n          score: game[`${isGreen ? game.greenTeam : blueTeam}_score`],\n          increment: dif <= 450 ? true : false,\n          matchId: app.matchId,\n          gameId: app.gameId\n        }\n      });\n    }\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { UPDATE_GAME, UPDATE_IDS } from \"../store/types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { gql } from \"apollo-boost\";\nimport { db } from \"../store/firebaseConfig\";\n\nexport default function useLiveIds() {\n  const dispatch = useDispatch();\n  const [data, setData] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const unsub = db.doc(\"app/activeIds\").onSnapshot(ref => {\n      setData(ref.data());\n      dispatch({ type: UPDATE_IDS, payload: ref.data() });\n      if (loading) setLoading(false);\n    });\n    return () => {\n      unsub();\n    };\n  }, []);\n\n  return { ...data, loading };\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { UPDATE_GAME, UPDATE_MATCH } from \"../store/types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { gql } from \"apollo-boost\";\nimport { db } from \"../store/firebaseConfig\";\nimport { ACTIVE_MATCH_QUERY } from \"../store/queries\";\nimport { declareWinnerAction } from \"../store/actions/actions\";\nimport useCheckForWinner from \"./useCheckForWinner\";\nimport useLiveIds from \"./useLiveIds\";\n\nexport default function useSubscribeToGame() {\n  const dispatch = useDispatch();\n\n  const { matchId, gameId, loading } = useLiveIds();\n\n  const [game, setGame] = useState({\n    team1_score: 0,\n    team2_score: 0\n  });\n\n  // Listen to the score of the live game\n  useEffect(() => {\n    if (loading) return;\n\n    const unsubscribeGame = db\n      .doc(`matches/${matchId}/games/${gameId}`)\n      .onSnapshot(ref => {\n        setGame(ref.data());\n        dispatch({ type: UPDATE_GAME, payload: ref.data() });\n      });\n    const unsubscribeMatch = db.doc(`matches/${matchId}`).onSnapshot(ref => {\n      dispatch({ type: UPDATE_MATCH, payload: ref.data() });\n    });\n\n    return () => {\n      unsubscribeGame();\n      unsubscribeMatch();\n    };\n  }, [matchId, gameId, loading]);\n\n  // Declare winner\n  useCheckForWinner({\n    team1_score: game.team1_score,\n    team2_score: game.team2_score\n  });\n  return { loading };\n}\n","import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { UPDATE_MATCH, UPDATE_GAME, DECLARE_WINNER } from \"../store/types\";\nimport { DECLARE_WINNER_MUTAION } from \"../store/mutations\";\nimport { declareWinnerAction } from \"../store/actions/actions\";\n\nexport default function useCheckForWinner({ team1_score, team2_score }) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [winner, setWinner] = useState(null);\n\n  const { data, loading: loadingQuery } = useQuery(\n    gql`\n      query getActiveMatch {\n        activeMatch {\n          matchId\n          gameId\n          match {\n            winner\n            pointsToWin\n          }\n        }\n      }\n    `,\n    { fetchPolicy: \"network-only\" }\n  );\n\n  /**\n   * Logic to check if there should be a game winner\n   */\n  useEffect(() => {\n    const score = {\n      team1: team1_score,\n      team2: team2_score\n    };\n\n    if (loadingQuery) return;\n    const {\n      match: { pointsToWin, winner }\n    } = data.activeMatch;\n\n    const checkForWinner = Object.entries(score).find(\n      ([team, score]) => score >= pointsToWin\n    );\n\n    if (checkForWinner && Math.abs(team1_score - team2_score) > 1) {\n      const results = Object.entries(score).sort((a, b) => {\n        return a[1] < b[1] ? 1 : -1;\n      })[0];\n      const winnerObj = {\n        finalScore: { team1_score, team2_score },\n        winningTeam: results[0]\n      };\n\n      setWinner(winnerObj);\n    }\n  }, [data, loadingQuery, team1_score, team2_score]);\n\n  /**\n   * Declare winner mutation\n   */ const [declareWinner, { data: mutationData, error }] = useMutation(\n    DECLARE_WINNER_MUTAION\n  );\n  useEffect(() => {\n    if (!winner || loadingQuery) return;\n    declareWinner({\n      variables: {\n        matchId: data.activeMatch.matchId,\n        gameId: data.activeMatch.gameId,\n        winner: winner.winningTeam\n      }\n    }).then(({ data: { declareWinner } }) => {\n      dispatch({ type: DECLARE_WINNER });\n      history.push(\"/match/winner\", {\n        match: {\n          ...declareWinner\n        }\n      });\n    });\n  }, [data, declareWinner, dispatch, loadingQuery, winner]);\n\n  return winner;\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { __RouterContext } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { UPDATE_SCORE_MUTATION } from \"../store/mutations\";\n\nconst ScoreButton = ({ side }) => {\n  const {\n    history,\n    match: {\n      params: { matchId, gameId }\n    }\n  } = useContext(__RouterContext);\n  const [updateScore, { loading: mutationRunning }] = useMutation(\n    UPDATE_SCORE_MUTATION,\n    { variables: { matchId, gameId } }\n  );\n  const [isDisabled, setDisabled] = useState(false);\n  const [justScored, setJustScored] = useState(false);\n  const greenTeam = useSelector(state => state.game.greenTeam);\n  const team =\n    side === \"green\" ? greenTeam : greenTeam === \"team1\" ? \"team2\" : \"team1\";\n  const teamInfo = useSelector(state => {\n    return {\n      name: state.match[`${team}_name`],\n      score: state.game[`${team}_score`]\n    };\n  });\n  const { name, score } = teamInfo;\n  useEffect(() => {\n    console.log(justScored, team, teamInfo.score);\n\n    if (teamInfo.score === 0 || teamInfo.score === undefined) return;\n    setJustScored(true);\n    setTimeout(() => {\n      setJustScored(false);\n    }, 1000);\n  }, [teamInfo.score]);\n\n  return (\n    <button\n      className={\"btn--increment \" + side + `${justScored ? \" scored\" : \"\"}`}\n      disabled={mutationRunning && isDisabled}\n      onClick={() => {\n        setDisabled(true);\n        updateScore({\n          variables: {\n            team,\n            score,\n            increment: true\n          }\n        }).then(res => {\n          setDisabled(false);\n        });\n      }}>\n      <p className=\"team-name\">{name && name.length > 0 ? name : team}</p>\n      <p className=\"score\">{score}</p>\n    </button>\n  );\n};\n\nexport default ScoreButton;\n","import React, { useEffect, useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gameControl from \"gamecontroller.js/src/gamecontrol\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { gql } from \"apollo-boost\";\nimport { buttonPressedAction } from \"../store/actions/actions\";\nimport { UPDATE_SCORE_MUTATION } from \"../store/mutations\";\n\nexport default function useRegisterGamePad() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { matchId, gameId, greenTeam } = useSelector(state => {\n    return {\n      matchId: state.app.matchId,\n      gameId: state.app.gameId,\n      greenTeam: state.game.greenTeam\n    };\n  });\n  const [updateScore, { loading: mutationRunning }] = useMutation(\n    UPDATE_SCORE_MUTATION\n  );\n  const [nextGame, { loading: mutationLoading }] = useMutation(\n    gql`\n      mutation NextGame($matchId: String!, $prevGreenTeam: TeamEnum!) {\n        nextGame(matchId: $matchId, prevGreenTeam: $prevGreenTeam) {\n          matchId\n          gameId\n          game {\n            team1_score\n            team2_score\n            servingTeam\n          }\n        }\n      }\n    `,\n    { variables: { matchId, prevGreenTeam: greenTeam } }\n  );\n  useEffect(() => {\n    console.log(\"effect running\");\n\n    gameControl.on(\"connect\", function(gamepad) {\n      const neededValues = {\n        gamepad,\n        dispatch,\n        updateScore,\n        nextGame,\n        history\n      };\n      registerButton({ id: \"button0\", color: \"green\", ...neededValues });\n      registerButton({ id: \"button3\", color: \"blue\", ...neededValues });\n    });\n    return () => {\n      gameControl.off(\"connect\");\n    };\n  }, [matchId, gameId]);\n}\n\nfunction registerButton({ id, color, gamepad, dispatch, ...rest }) {\n  let pressedOn = {};\n\n  gamepad\n    .before(id, () => {\n      pressedOn = new Date();\n    })\n    .after(id, () => {\n      const releasedOn = new Date();\n      var dif = releasedOn.getTime() - pressedOn.getTime();\n\n      dispatch(buttonPressedAction({ buttonColor: color, dif, ...rest }));\n    });\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Redirect, useHistory } from \"react-router-dom\";\n\nimport { gql } from \"apollo-boost\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { SWAP_SERVE, CLEAR_GAME, EXIT_GAME } from \"../store/types\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { UPDATE_SCORE_MUTATION } from \"../store/mutations\";\nimport useSubscribeToGame from \"../hooks/useSubscribeToGame\";\nimport useCheckForWinner from \"../hooks/useCheckForWinner\";\n\nimport ScoreButton from \"./ScoreButton\";\nimport { loadPartialConfig } from \"@babel/core\";\nimport useRegisterGamePad from \"../hooks/useRegisterGamePad\";\n\nconst Container = styled.div`\n  display: grid;\n  position: relative;\n  grid-template-columns: 1fr 50px 1fr;\n`;\n\nexport default function Game() {\n  /**\n   * Component data\n   */\n  useRegisterGamePad();\n  const { loading } = useSubscribeToGame();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const matchState = useSelector(state => ({\n    ...state.match,\n    ...state.app,\n    game: state.game\n  }));\n\n  const {\n    team1_name,\n    team2_name,\n    serveNum,\n    pointsToWin,\n    game,\n    matchId,\n    gameId\n  } = matchState;\n\n  return loading ? null : (\n    <Container className=\"pi-focused\">\n      <ScoreButton side=\"green\" />\n      <div\n        className=\"center-btns\"\n        onClick={() => {\n          dispatch({ type: EXIT_GAME });\n          history.push(\"/match\");\n        }}\n      />\n\n      <ScoreButton side=\"blue\" />\n    </Container>\n  );\n}\n","import React, { useContext, useEffect } from \"react\";\nimport classnames from \"classnames\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { useHistory } from \"react-router-dom\";\nimport { initializeGameAction } from \"../store/actions/actions\";\nimport { EXIT_GAME } from \"../store/types\";\nimport useSubscribeToGame from \"../hooks/useSubscribeToGame\";\n\nexport default function Winner() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const greenTeam = useSelector(state => state.game.greenTeam);\n  const state = useSelector(state => ({\n    team1: { name: state.match.team1_name, score: state.game.team1_score },\n    team2: { name: state.match.team2_name, score: state.game.team2_score },\n    greenTeam: state.game.greenTeam,\n    isMatchOver: state.match.winner !== null,\n    matchWinner: state.match.winner,\n    gameWinner: state.game.winner,\n    app: state.app\n  }));\n\n  const {\n    app: { matchId, gameId },\n    isMatchOver,\n    gameWinner,\n    matchWinner\n  } = state;\n\n  const [nextGame, { loading: mutationLoading }] = useMutation(\n    gql`\n      mutation NextGame($matchId: String!, $prevGreenTeam: TeamEnum!) {\n        nextGame(matchId: $matchId, prevGreenTeam: $prevGreenTeam) {\n          matchId\n          gameId\n          game {\n            team1_score\n            team2_score\n            servingTeam\n          }\n        }\n      }\n    `,\n    { variables: { matchId, prevGreenTeam: greenTeam } }\n  );\n  const greenOrBlue = isMatchOver\n    ? matchWinner === greenTeam\n      ? \"green\"\n      : gameWinner === greenTeam\n      ? \"green\"\n      : \"blue\"\n    : \"blue\";\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", addArcadeListeners);\n    function addArcadeListeners(e) {\n      if (e.key === \"w\" || \"q\" || \"a\" || \"s\") {\n        nextGame().then(res => {\n          dispatch(initializeGameAction({ data: res.data.nextGame, history }));\n        });\n      }\n    }\n\n    return () => {\n      document.removeEventListener(\"keydown\", addArcadeListeners);\n    };\n  }, [dispatch, history, nextGame]);\n\n  if (isMatchOver) {\n    setTimeout(() => {\n      dispatch({ type: EXIT_GAME });\n      history.push(\"/match\");\n    }, 10000);\n  }\n  if (!gameWinner) {\n    return (\n      <>\n        <p>Unknown Error</p>\n        <button onClick={() => history.push(\"/match\")}>New Match Screen</button>\n      </>\n    );\n  }\n\n  return (\n    <div className={classnames(\"winner-screen pi-focused\", greenOrBlue)}>\n      <p>\n        {isMatchOver\n          ? `${state[matchWinner].name} wins the Match!`\n          : `${state[gameWinner].name} wins the Game!`}\n      </p>\n      <button\n        className=\"btn--full-width\"\n        onClick={() => {\n          if (isMatchOver) {\n            dispatch({ type: EXIT_GAME });\n            history.push(\"/match\");\n          } else {\n            nextGame().then(res => {\n              dispatch(\n                initializeGameAction({ data: res.data.nextGame, history })\n              );\n            });\n          }\n        }}>\n        {isMatchOver\n          ? \"New Match\"\n          : !mutationLoading\n          ? \"Next Game\"\n          : \"Loading...\"}\n      </button>\n    </div>\n  );\n}\n","/* eslint-disable*/\nimport React, { useEffect } from \"react\";\nimport { __RouterContext, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { db } from \"../store/firebaseConfig\";\nimport { UPDATE_MATCH } from \"../store/types\";\nimport Game from \"../components/Game\";\nimport Winner from \"../components/Winner\";\nimport { ACTIVE_MATCH_QUERY } from \"../store/queries\";\n\nfunction CurrentMatch({ history, match: { params } }) {\n  const matchInit = useSelector(state => state.app.matchInit);\n  const dispatch = useDispatch();\n\n  const { data, loading } = useQuery(ACTIVE_MATCH_QUERY, {\n    fetchPolicy: \"network-only\"\n  });\n\n  useEffect(() => {\n    if (loading || matchInit) return;\n    dispatch({ type: UPDATE_MATCH, payload: data.activeMatch?.match });\n  }, [data]);\n\n  return <Game />;\n}\n\nexport default CurrentMatch;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { initializeMatchAction } from \"../store/actions/actions\";\nimport Keyboard from \"react-simple-keyboard\";\nimport \"react-simple-keyboard/build/css/index.css\";\n\nfunction NewMatch({ history }) {\n  const dispatch = useDispatch();\n  const [keyboardShowing, showKeyboard] = useState(false);\n  const [inputTarget, setInputTarget] = useState(null);\n  const [layoutName, setLayoutName] = useState(\"default\");\n  const [state, setState] = useState({\n    team1_name: \"\",\n    team2_name: \"\",\n    pointsToWin: 21,\n    gamesToWin: 2\n  });\n  const [createMatch, { loading: mutationLoading }] = useMutation(gql`\n    mutation CreateMatch(\n      $pointsToWin: Int\n      $gamesToWin: Int\n      $team1_name: String\n      $team2_name: String\n    ) {\n      createMatch(\n        pointsToWin: $pointsToWin\n        gamesToWin: $gamesToWin\n        team1_name: $team1_name\n        team2_name: $team2_name\n      ) {\n        matchId\n        gameId\n        match {\n          pointsToWin\n          gamesToWin\n          team1_name\n          team2_name\n        }\n        game {\n          team1_score\n          team2_score\n          servingTeam\n        }\n      }\n    }\n  `);\n\n  const { team1_name, team2_name, gamesToWin, pointsToWin } = state;\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]:\n        e.target.name === \"pointsToWin\" || e.target.name === \"gamesToWin\"\n          ? parseInt(e.target.value)\n          : e.target.value\n    });\n  }\n\n  function handleFocus(e) {\n    setLayoutName(e.target.name === \"pointsToWin\" ? \"numpad\" : \"default\");\n    setState({ ...state, [e.target.name]: \"\" });\n    setInputTarget(e.target.name);\n    showKeyboard(true);\n  }\n\n  return (\n    <div style={{ display: \"grid\" }} className=\"pi-focused\">\n      <form\n        className=\"new-match-form\"\n        autoComplete=\"off\"\n        onSubmit={async e => {\n          e.preventDefault();\n\n          createMatch({\n            variables: state\n          })\n            .then(res => {\n              const data = res.data.createMatch;\n              dispatch(initializeMatchAction({ data, history }));\n            })\n            .catch(err => console.error(err));\n        }}>\n        <div>\n          <label htmlFor=\"team1\" onFocus={e => handleFocus(e)}>\n            Green:\n            <input\n              value={team1_name}\n              name=\"team1_name\"\n              id=\"team1\"\n              onChange={e => handleChange(e)}\n            />\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"team2\" onFocus={e => handleFocus(e)}>\n            Blue:\n            <input\n              value={team2_name}\n              name=\"team2_name\"\n              onChange={e => handleChange(e)}\n              id=\"team2\"\n            />\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"game-type\">\n            Best of:\n            <select\n              name=\"gamesToWin\"\n              id=\"game-type\"\n              value={gamesToWin}\n              onChange={e => handleChange(e)}>\n              <option value=\"2\">2/3</option>\n              <option value=\"1\">1</option>\n            </select>\n          </label>\n        </div>\n        <div>\n          <label\n            htmlFor=\"pointsToWin\"\n            onFocus={e => handleFocus(e)}\n            onBlur={() => {}}>\n            Points To Win:\n            <input\n              type=\"number\"\n              name=\"pointsToWin\"\n              value={pointsToWin}\n              onChange={e => handleChange(e)}\n            />\n          </label>\n        </div>\n        <button\n          disabled={keyboardShowing}\n          type=\"submit\"\n          className=\"btn--full-width\">\n          {mutationLoading ? \"Loading...\" : \"Start Match\"}\n        </button>\n      </form>\n      {keyboardShowing && (\n        <div\n          className={`keyboard__container ${\n            layoutName === \"shift\" ? \"keyboard__container--shift\" : \"\"\n          }`}>\n          <div className=\"keyboard__input\">\n            <span>{state[inputTarget]}</span>\n          </div>\n          <Keyboard\n            onChange={input => {\n              setState({\n                ...state,\n                [inputTarget]:\n                  inputTarget === \"pointsToWin\" || inputTarget === \"gamesToWin\"\n                    ? parseInt(input)\n                    : input\n              });\n            }}\n            inputName={inputTarget}\n            layoutName={layoutName}\n            layout={{\n              default: [\n                \"q w e r t y u i o p {bksp}\",\n                \"a s d f g h j k l\",\n                \"z x c v b n m\",\n                \"{shift} & {space} , {close}\"\n              ],\n              shift: [\n                \"Q W E R T Y U I O P {bksp}\",\n                \"A S D F G H J K L\",\n                \"Z X C V B N M\",\n                \"{shift} & {space} , {close}\"\n              ],\n              numpad: [\"7 8 9\", \"4 5 6\", \"1 2 3\", \" 0 {ok}\"]\n            }}\n            buttonTheme={[\n              {\n                class: \"highlight\",\n                buttons: \"{shift}\"\n              }\n            ]}\n            onKeyPress={btn => {\n              if (btn === \"{shift}\") {\n                setLayoutName(layoutName === \"default\" ? \"shift\" : \"default\");\n              }\n              if (btn === \"{close}\" || btn === \"{ok}\") {\n                showKeyboard(false);\n              }\n            }}\n            mergeDisplay={true}\n            display={{\n              \"{bksp}\": \"⌫\",\n              \"{close}\": \"✓\",\n              \"{shift}\": \"⇪\",\n              \"{ok}\": \"✓\"\n            }}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default NewMatch;\n","import React, { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { ACTIVE_MATCH_QUERY } from \"../store/queries\";\nimport useSubscribeToGame from \"../hooks/useSubscribeToGame\";\nimport useLiveIds from \"../hooks/useLiveIds\";\n\nexport default function ScoreBoard() {\n  const { matchId, gameId } = useLiveIds();\n  const { data, loading, refetch: refetchNames } = useQuery(\n    gql`\n      query getActiveMatch {\n        activeMatch {\n          match {\n            team1_name\n            team2_name\n          }\n        }\n      }\n    `,\n    {\n      fetchPolicy: \"network-only\"\n    }\n  );\n\n  const { loading: firebaseLoading, data: game } = useSubscribeToGame(\n    matchId,\n    gameId,\n    { dispatch: false }\n  );\n  const { greenTeam } = game;\n\n  useEffect(() => {\n    refetchNames();\n  }, [matchId]);\n\n  return !firebaseLoading && !loading ? (\n    <div className=\"scoreboard\">\n      <TeamScore\n        score={game[`${greenTeam}_score`]}\n        team={data.activeMatch?.match[`${greenTeam}_name`]}\n      />\n      <TeamScore\n        score={game[`${greenTeam === \"team1\" ? \"team2\" : \"team1\"}_score`]}\n        team={\n          data.activeMatch?.match[\n            `${greenTeam === \"team1\" ? \"team2\" : \"team1\"}_name`\n          ]\n        }\n      />\n    </div>\n  ) : (\n    <p>Loading...</p>\n  );\n}\n\nfunction TeamScore({ score, team }) {\n  return (\n    <div className=\"team-score\">\n      <h1>{team}:</h1>\n      <div className=\"scoreboard__score\">{score}</div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport ApolloClient from \"apollo-boost\";\nimport createReduxStore from \"./store/store\";\nimport firebase from \"firebase/app\";\n\n// Add the Firebase services that you want to use\nimport { Provider } from \"react-redux\";\nimport CurrentMatch from \"./pages/CurrentMatch\";\nimport NewMatch from \"./pages/NewMatch\";\nimport Winner from \"./components/Winner\";\nimport ScoreBoard from \"./pages/ScoreBoard\";\nimport \"./scss/App.scss\";\n\nconst store = createReduxStore(firebase);\n\nconst client = new ApolloClient();\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <Provider store={store}>\n          <Router>\n            <Switch>\n              {/* Pi Focused screens  */}\n              <Route path={[\"/match\", \"/\"]} exact component={NewMatch} />\n              <Route\n                path={[\"/match/:matchId/game/:gameId\"]}\n                component={CurrentMatch}\n              />\n              <Route path=\"/scoreboard\" component={ScoreBoard} />\n              <Route path=\"/match/winner\" component={Winner} />\n            </Switch>\n          </Router>\n        </Provider>\n      </ApolloProvider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}